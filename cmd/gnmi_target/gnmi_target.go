// Copyright 2019-present Open Networking Foundation.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Binary gnmi_target implements a gNMI Target with in-memory configuration and telemetry.
package main

import (
	"bytes"
	"encoding/json"
	"encoding/xml"
	"flag"
	"fmt"
	"io/ioutil"
	"net"
	"os"
	"reflect"
	"regexp"
	"strconv"
	"strings"
	"time"

	"github.com/onosproject/onos-lib-go/pkg/logging"

	"google.golang.org/grpc"
	"google.golang.org/grpc/codes"
	"google.golang.org/grpc/reflection"
	"google.golang.org/grpc/status"

	"github.com/onosproject/gnxi-simulators/pkg/gnmi"
	"github.com/onosproject/gnxi-simulators/pkg/gnmi/modeldata"
	"github.com/onosproject/gnxi-simulators/pkg/gnmi/modeldata/gostruct"

	"github.com/google/gnxi/utils/credentials"

	pb "github.com/openconfig/gnmi/proto/gnmi"

	// temporary for testing the xml to gnmi response conversion
	// types "github.com/onosproject/storage-service/pkg/types"
	"github.com/openconfig/goyang/pkg/yang"
)

var log = logging.GetLogger("main")

var xmlString = `<data xmlns="urn:ietf:params:xml:ns:netconf:base:1.0"><netconf-server xmlns="urn:ietf:params:xml:ns:yang:ietf-netconf-server"><listen><endpoint><name>default-ssh</name><ssh><tcp-server-parameters><local-address>0.0.0.0</local-address><keepalives><idle-time>1</idle-time><max-probes>10</max-probes><probe-interval>5</probe-interval></keepalives></tcp-server-parameters><ssh-server-parameters><server-identity><host-key><name>default-key</name><public-key><keystore-reference>genkey</keystore-reference></public-key></host-key></server-identity><client-authentication><supported-authentication-methods><publickey/><passsword/><other>interactive</other></supported-authentication-methods><users/></client-authentication></ssh-server-parameters></ssh></endpoint><endpoint><name>default-tls</name><tls><tcp-server-parameters><local-address>0.0.0.0</local-address><keepalives><idle-time>1</idle-time><max-probes>10</max-probes><probe-interval>5</probe-interval></keepalives></tcp-server-parameters><tls-server-parameters><server-identity><keystore-reference><asymmetric-key>serverkey</asymmetric-key><certificate>servercert</certificate></keystore-reference></server-identity><client-authentication><required/><ca-certs>cacerts</ca-certs><client-certs>clientcerts</client-certs><cert-maps><cert-to-name><id>1</id><fingerprint>02:E9:38:1F:F6:8B:62:DE:0A:0B:C5:03:81:A8:03:49:A0:00:7F:8B:F3</fingerprint><map-type xmlns:x509c2n="urn:ietf:params:xml:ns:yang:ietf-x509-cert-to-name">x509c2n:specified</map-type><name>root</name></cert-to-name></cert-maps></client-authentication></tls-server-parameters></tls></endpoint></listen></netconf-server><keystore xmlns="urn:ietf:params:xml:ns:yang:ietf-keystore"><asymmetric-keys><asymmetric-key><name>genkey</name><algorithm>rsa2048</algorithm><public-key>MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAwMPhXSQ1Dnn/gyhxeNZf0u3fOlM3BvK4VrXBcMw75HePjzUNueRoYorhT76afHtnEGKMnHUtIgmRmgxdhef1QFaW1ND+8CITnZxMLlYh56EIRNTRs0tzS6wWFQKmlD81LAtn+ESbPkzSlgVuurAdYqAUlHbYqrpv91Oon1ymqKlV/wkuj9HohpOdWnnDnaCPbvyy1M0Jg8/iUrzBTU2ugBw6eG4kNJ1z+fgTDLz4cizOUHyNZiwAVrZUk1hbsvXwRqWriQbPjb9zbnYg324UwbDZoh2lkCEZqnq+2LatGcAFz6NZf2v6LTtnVBSQ1n54/FTS6hiTVpdWVaDuMSAFRwIDAQAB</public-key><private-key>MIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDAw+FdJDUOef+DKHF41l/S7d86UzcG8rhWtcFwzDvkd4+PNQ255GhiiuFPvpp8e2cQYoycdS0iCZGaDF2F5/VAVpbU0P7wIhOdnEwuViHnoQhE1NGzS3NLrBYVAqaUPzUsC2f4RJs+TNKWBW66sB1ioBSUdtiqum/3U6ifXKaoqVX/CS6P0eiGk51aecOdoI9u/LLUzQmDz+JSvMFNTa6AHDp4biQ0nXP5+BMMvPhyLM5QfI1mLABWtlSTWFuy9fBGpauJBs+Nv3NudiDfbhTBsNmiHaWQIRmqer7Ytq0ZwAXPo1l/a/otO2dUFJDWfnj8VNLqGJNWl1ZVoO4xIAVHAgMBAAECggEAIhJ9gzkjJ6vovgYoCHPb/CyPiH+s+k1sx+bYilePPpLjjSyTgIge60whBzdplxc44GyK7hzIHXwTgGcvILwfXX/wqS1H4qojTXiS/p264HZWP9RePJLZjkacoJoXV5zUiTR67Cc0SY7KqjnLmLQIfaZN/PAE3CiYId9nrsNxsd3uCnv1iD8sMQp/cCUrm8olOC3XC+ysGC5aNbzgPZ2tASYKbAdebKnyFaVm1KHpkReQYQ/pDviMygfHkk7AVu/qKoRvtbTPZoT1fUP0XibpBLO64VUzYoREx7eutqq2jVR07FJAE3ZShgVqNRX1q8vsci1dvVSeWxPBhRLL4aFGAQKBgQDh8tXbiQY20LtpLGoCe46s/v4LaGWeDYe5renwgUU6VMMgUG0xktqN0yYQQSWiSDNys2yIwFDRHHy19xLW6t878oVaxmuwhDJwsco2fV2KpHkZYZPR+KugTFUk6vOCTcKBdMMGOeAh4lbgDhVY0fK+gAUh9dfkAMjv+V9JK/8OkwKBgQDaZzS9As1dMoOvWRkKqKkzAUDK651Xjb3aDmQCa+b7RGK/PNN1BJT1t/sa+KhZR6aVw/OB2AfUpq01XvXm9Eguy1E9Fqkm62Y0MMtZXTf7tr+KCm/o/XpDW2V1i5v64mB5BdsZ3RhxH+7HCpcGeecgXJ/1UHzkBuikCzBMK7uq/QKBgQCgzUK3v7flcP2/pvU3GRn8Mmk4Uy7mofhzA7uXB1juX36S08oyWrIh9yCCtuqCqOG8gsb+N+gMOjrjAZitzW/b6QhRBx+C+0Iug8lGqEfXMKBimNgruc7jARAjevacSJzhpuhY2P2S/9MWF8/Ha3tXaiK8/YqM4KYgaxgOKjqV8wKBgFzWVhKqKEWffV6CDyT6wMGPnM0lDoLzG2qfh1+IIm1YimkkH/az9eXlSPYUEOuyi1tKKi5deCaqmyH+taRw3mYVwvims0x5773rp+TavTtgWVcCTMPLS7dqGFy49ZrVs5B+Lr51vzgHDObK15vHIbod5VjP1+bOEQH6R5N5W5K5AoGBAJkMmFIM9tpGhwrtFhhAl/L1ZYQjAEE7BCHQc5klw8+FSHa0klRvqDXeMfaOUF69Rv7nahXIqJGYtp1bey2jT1y9HHXjuGVHpAoyYlzE6+RUgCQOtRccJFp+VYnJdmg+unHLcxSws+oH677gfmkiFFefxjOyynJUwgZfh8n0fJyB</private-key></asymmetric-key><asymmetric-key><name>serverkey</name><algorithm>rsa2048</algorithm><public-key>MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAsdI1TBjzX1PgQXFuPCw5/kQwU7qkrhirMcFAXhI8EoXepPa9fKAVuMjHW32P6nNzDpnhFe0YGdNloIEN3hJJ87cVOqj4o7zZMbq3zVG2L8As7MTA8tYXm2fSC/0rIxxRRemcGUXM0q+4LEACjZj2pOKonaivF5VbhgNjPCO1Jj/TamUc0aViE577C9L9EiObGM+bGbabWk/KWKLsvxUc+sKZXaJ7psTVgpggJAkUszlmwOQgFiMSR53E9/CAkQYhzGVCmH44Vs6Hzs3RZjOTbce4wr4ongiA5LbPeSNSCFjy9loKpaE1rtOjkNBVdiNPCQTmLuODXUTKgkeL+9v/OwIDAQAB</public-key><private-key>MIIEowIBAAKCAQEAsdI1TBjzX1PgQXFuPCw5/kQwU7qkrhirMcFAXhI8EoXepPa9fKAVuMjHW32P6nNzDpnhFe0YGdNloIEN3hJJ87cVOqj4o7zZMbq3zVG2L8As7MTA8tYXm2fSC/0rIxxRRemcGUXM0q+4LEACjZj2pOKonaivF5VbhgNjPCO1Jj/TamUc0aViE577C9L9EiObGM+bGbabWk/KWKLsvxUc+sKZXaJ7psTVgpggJAkUszlmwOQgFiMSR53E9/CAkQYhzGVCmH44Vs6Hzs3RZjOTbce4wr4ongiA5LbPeSNSCFjy9loKpaE1rtOjkNBVdiNPCQTmLuODXUTKgkeL+9v/OwIDAQABAoIBAG/4MG1JbL4C/7vVpBcpth7Aaznd1eJ2UB4VVOWnT8JOH2L6p1h5KRRhAP9AMkXsCnAQPyZiVAG3FlAZ01SZaY2YJDr6uQ3JVW4155TWtgSdWux//Ass+lJ17lJ0SRxjsV13ez6CsDWeRjc+2xy0S+KJgqk71XzhJG9fZLYyuddp3U/i3xFPUAcQM9xXKxcaD7g6LJf+a9pt6rimEqq/pjJxDgTsRLARsazYuxrlOB445mvnLiYhOf2/MvI80jIUKaj8BeAhg49UIg/kmIh0xdevkcxBFer/BjBjscWaFjx14D6nkFMw7vtCum5KfalLN2edZKAzByOudGD45KnRp3ECgYEA6vnSoNGg9Do80JOpXRGYWhcR1lIDO5yRW5rVagncCcW5Pn/GMtNdx2q6k1ks8mXKR9CxZrxZGqeYObZ9a/5SLih7ZkpiVWXG8ZiBIPhP6lnwm5OeIqLahr0BYWcRfrGg1phj5uySZgsVBE+D8jH42O9ccdvrWv1OiryAHfKIcwMCgYEAwbs+HfQtvHOQXSYNhtOeA7IetkGy3cKVg2oILNcROvI96hS0MZKt1Rko0UAapx96eCIrel7vfdT0eUzNqt2wTKp1zmiG+SnX3fMDJNzMwu/jb/b4wQ20IHWNDnqcqTUVRUnLiksLFoHbTxsN5NpEQExcSt/zzP4qi1W2Bmo18WkCgYEAnhrk16LVux9ohiulHONW8N9u+BeM51JtGAcxrDzgGo85Gs2czdwc0K6GxdiN/rfxCKtqgqcfCWlVaxfYgo7IOxiwF17blXx7BVrJICcUlqpX1Ebac5HCmkCYqjJQuj/I6jv1lI7/3rt8M79RF+j5+PXt7Qq97SZd78nwJrZni4MCgYAiPjZ8lOyAouyhilhZvI3xmUpUbMhw6jQDRnqrclhZUvgeqAoxuPuA7zGHywzq/WVoVqHYv28Vjs6noiu4R/chlf+8vD0fTYYadRnZKi4HRt+sqrrNZN6x3hVQudt3DSr1VFXl293Z3JonIWETUoE93EFz+qHdWg+rETtbZuqiAQKBgD+HI/syLECyO8UynuEaDD7qPl87PJ/CmZLMxa2/ZZUjhaXAW7CJMaS69PIzsLk33y3O4Qer0wx/tEdfnxMTBJrgGt/lFFdAKhSJroZ45l5apiavg1oZYp89jSd0lVxWSmrBjBZLnqOl336gzaBVkBD5ND+XUPdR1UuVQExJlem4</private-key><certificates><certificate><name>servercert</name><cert>MIIECTCCAvGgAwIBAgIBCDANBgkqhkiG9w0BAQsFADCBjDELMAkGA1UEBhMCQ1oxFjAUBgNVBAgMDVNvdXRoIE1vcmF2aWExDTALBgNVBAcMBEJybm8xDzANBgNVBAoMBkNFU05FVDEMMAoGA1UECwwDVE1DMRMwEQYDVQQDDApleGFtcGxlIENBMSIwIAYJKoZIhvcNAQkBFhNleGFtcGxlY2FAbG9jYWxob3N0MB4XDTE1MDczMDA3MjU1MFoXDTM1MDcyNTA3MjU1MFowgYUxCzAJBgNVBAYTAkNaMRYwFAYDVQQIDA1Tb3V0aCBNb3JhdmlhMQ8wDQYDVQQKDAZDRVNORVQxDDAKBgNVBAsMA1RNQzEXMBUGA1UEAwwOZXhhbXBsZSBzZXJ2ZXIxJjAkBgkqhkiG9w0BCQEWF2V4YW1wbGVzZXJ2ZXJAbG9jYWxob3N0MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAsdI1TBjzX1PgQXFuPCw5/kQwU7qkrhirMcFAXhI8EoXepPa9fKAVuMjHW32P6nNzDpnhFe0YGdNloIEN3hJJ87cVOqj4o7zZMbq3zVG2L8As7MTA8tYXm2fSC/0rIxxRRemcGUXM0q+4LEACjZj2pOKonaivF5VbhgNjPCO1Jj/TamUc0aViE577C9L9EiObGM+bGbabWk/KWKLsvxUc+sKZXaJ7psTVgpggJAkUszlmwOQgFiMSR53E9/CAkQYhzGVCmH44Vs6Hzs3RZjOTbce4wr4ongiA5LbPeSNSCFjy9loKpaE1rtOjkNBVdiNPCQTmLuODXUTKgkeL+9v/OwIDAQABo3sweTAJBgNVHRMEAjAAMCwGCWCGSAGG+EIBDQQfFh1PcGVuU1NMIEdlbmVyYXRlZCBDZXJ0aWZpY2F0ZTAdBgNVHQ4EFgQU83qEtQDFzDvLoaIIvqiU6k7j1uswHwYDVR0jBBgwFoAUc1YQIqjZsHVwlea0AB4N+ilNI2gwDQYJKoZIhvcNAQELBQADggEBAJ+QOLi4gPWGofMkLTqSsbv5xRvTw0xa/sJnEeiejtygAu3oMcAsyevSH9EYVPCANxzISPzd9SFaO56HxWgcxLn9vi8ZNvo2wIp9zucNu285ced1K/2nDZfBmvBxXnj/n7spwqOyuoIc8sR7P7YyI806Qsfhk3ybNZE5UHJFZKDRQKvRJ1t4nk9saeo87kIuNEDfYNdwYZzRfXoGJ5qIJQK+uJJv9noaIhfFowDW/G14Ji5pVh/YtvnOPh7aBjOj8jmzk8MqzK+TZgT7GWu48Nd/NaV8g/DNg9hlN047LaNsJly3NX3+VBlpMnA4rKwl1OnmYSirIVh9RJqNwqe6k/k=</cert></certificate></certificates></asymmetric-key></asymmetric-keys></keystore><truststore xmlns="urn:ietf:params:xml:ns:yang:ietf-truststore"><certificates><name>clientcerts</name><certificate><name>clientcert</name><cert>MIIECTCCAvGgAwIBAgIBBzANBgkqhkiG9w0BAQsFADCBjDELMAkGA1UEBhMCQ1oxFjAUBgNVBAgMDVNvdXRoIE1vcmF2aWExDTALBgNVBAcMBEJybm8xDzANBgNVBAoMBkNFU05FVDEMMAoGA1UECwwDVE1DMRMwEQYDVQQDDApleGFtcGxlIENBMSIwIAYJKoZIhvcNAQkBFhNleGFtcGxlY2FAbG9jYWxob3N0MB4XDTE1MDczMDA3MjcxOFoXDTM1MDcyNTA3MjcxOFowgYUxCzAJBgNVBAYTAkNaMRYwFAYDVQQIDA1Tb3V0aCBNb3JhdmlhMQ8wDQYDVQQKDAZDRVNORVQxDDAKBgNVBAsMA1RNQzEXMBUGA1UEAwwOZXhhbXBsZSBjbGllbnQxJjAkBgkqhkiG9w0BCQEWF2V4YW1wbGVjbGllbnRAbG9jYWxob3N0MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAueCQaNQWoNmFK6LKu1p8U8ZWdWg/PvDdLsJyzfzl/Qw4UA68SfFNaY06zZl8QB9W02nr5kWeeMY0VA3adrPgOlvfx3oWlFbkETnMaN4OT3WTQ0Wt6jAWZDzVfopwpJPAzRPxACDftIqFGagYcF32hZlVNqqnVdbXh0S0EViweqp/dbG4VDUHSNVbglc+u4UbEzNIFXMdEFsJZpkynOmSiTsIATqIhb+2srkVgLwhfkC2qkuHQwAHdubuB07ObM2z01UhyEdDvEYGHwtYAGDBL2TAcsI0oGeVkRyuOkV0QY0UN7UEFI1yTYw+xZ42HgFx3uGwApCImxhbj69GBYWFqwIDAQABo3sweTAJBgNVHRMEAjAAMCwGCWCGSAGG+EIBDQQfFh1PcGVuU1NMIEdlbmVyYXRlZCBDZXJ0aWZpY2F0ZTAdBgNVHQ4EFgQUXGpLeLnh2cSDARAVA7KrBxGYpo8wHwYDVR0jBBgwFoAUc1YQIqjZsHVwlea0AB4N+ilNI2gwDQYJKoZIhvcNAQELBQADggEBAJPV3RTXFRtNyOU4rjPpYeBAIAFp2aqGc4t2J1c7oPp/1n+lZvjnwtlJpZHxMM783e2ryDQ6dkvXDf8kpwKlg3U3mkJ3xKkDdWrM4QwghXdCN519aa9qmu0zdFL+jUAaWlQ5tsceOrvbusCcbMqiFGk/QfpHqPv52SVWbYyUx7IX7DE+UjgsLHycfV/tlcx4ZE6soTzl9VdgSL/zmzG3rjsr58J80rXckLgBhvijgBlIAJvWfC7D0vaouvBInSFXymdPVoUDZ30cdGLf+hI/i/TfsEMOinLrXVdkSGNo6FXAHKSvXeB9oFKSzhQ7OPyRyqvEPycUSw/qD6FVr80oDDc=</cert></certificate></certificates><certificates><name>cacerts</name><certificate><name>cacert</name><cert>MIID7TCCAtWgAwIBAgIJAMtE1NGAR5KoMA0GCSqGSIb3DQEBBQUAMIGMMQswCQYDVQQGEwJDWjEWMBQGA1UECAwNU291dGggTW9yYXZpYTENMAsGA1UEBwwEQnJubzEPMA0GA1UECgwGQ0VTTkVUMQwwCgYDVQQLDANUTUMxEzARBgNVBAMMCmV4YW1wbGUgQ0ExIjAgBgkqhkiG9w0BCQEWE2V4YW1wbGVjYUBsb2NhbGhvc3QwHhcNMTQwNzI0MTQxOTAyWhcNMjQwNzIxMTQxOTAyWjCBjDELMAkGA1UEBhMCQ1oxFjAUBgNVBAgMDVNvdXRoIE1vcmF2aWExDTALBgNVBAcMBEJybm8xDzANBgNVBAoMBkNFU05FVDEMMAoGA1UECwwDVE1DMRMwEQYDVQQDDApleGFtcGxlIENBMSIwIAYJKoZIhvcNAQkBFhNleGFtcGxlY2FAbG9jYWxob3N0MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEArD3TDHPAMT2Z84orK4lMlarbgooIUCcRZyLe+QM+8KY8Hn+mGaxPEOTSL3ywszqefB/Utm2hPKLHX684iRC14ID9WDGHxPjvoPArhgFhfV+qnPfxKTgxZC12uOj4u1V9y+SkTCocFbRfXVBGpojrBuDHXkDMDEWNvr8/52YCv7bGaiBwUHolcLCUbmtKILCG0RNJyTaJpXQdAeq5Z1SJotpbfYFFtAXB32hVoLug1dzl2tjG9sb1wq3QaDExcbC5w6P65qOkNoyym9ne6QlQagCqVDyFn3vcqkRaTjvZmxauCeUxXgJoXkyWcm0lM1KMHdoTArmchw2Dz0yHHSyDAQIDAQABo1AwTjAdBgNVHQ4EFgQUc1YQIqjZsHVwlea0AB4N+ilNI2gwHwYDVR0jBBgwFoAUc1YQIqjZsHVwlea0AB4N+ilNI2gwDAYDVR0TBAUwAwEB/zANBgkqhkiG9w0BAQUFAAOCAQEAI/1KH60qnw9Xs2RGfi0/IKf5EynXt4bQX8EIyVKwSkYKe04zZxYfLIl/Q2HOPYoFmm3daj5ddr0ZS1i4p4fTUhstjsYWvXs3W/HhVmFUslakkn3PrswhP77fCk6eEJLxdfyJ1C7Uudq2m1isZbKih+XF0mG1LxJaDMocSz4eAya7M5brwjy8DoOmA1TnLQFCVcpn+sCr7VC4wE/JqxyVhBCk/MuGqqM3B1j90bGFZ112ZOecyE0EDSr6IbiRBtmeNbEwOFjKXhNLYdxpBZ9D8A/368OckZkCrVLGuJNxK9UwCVTe8IhotHUqU9EqFDmxdV8oIdU/OzUwwNPA/Bd/9g==</cert></certificate></certificates></truststore><ieee802-dot1q-fqtss xmlns="urn:ietf:params:xml:ns:yang:smiv2:ieee802-dot1q-fqtss"><ieee8021FqtssBapTable><ieee8021FqtssBapEntry><ieee8021BridgeBaseComponentId>1</ieee8021BridgeBaseComponentId><ieee8021BridgeBasePort>sw0p1</ieee8021BridgeBasePort><ieee8021FqtssBAPTrafficClass>0</ieee8021FqtssBAPTrafficClass><ieee8021FqtssAdminIdleSlopeMs>0</ieee8021FqtssAdminIdleSlopeMs><ieee8021FqtssAdminIdleSlopeLs>0</ieee8021FqtssAdminIdleSlopeLs></ieee8021FqtssBapEntry><ieee8021FqtssBapEntry><ieee8021BridgeBaseComponentId>1</ieee8021BridgeBaseComponentId><ieee8021BridgeBasePort>sw0p1</ieee8021BridgeBasePort><ieee8021FqtssBAPTrafficClass>1</ieee8021FqtssBAPTrafficClass><ieee8021FqtssAdminIdleSlopeMs>0</ieee8021FqtssAdminIdleSlopeMs><ieee8021FqtssAdminIdleSlopeLs>0</ieee8021FqtssAdminIdleSlopeLs></ieee8021FqtssBapEntry><ieee8021FqtssBapEntry><ieee8021BridgeBaseComponentId>1</ieee8021BridgeBaseComponentId><ieee8021BridgeBasePort>sw0p1</ieee8021BridgeBasePort><ieee8021FqtssBAPTrafficClass>2</ieee8021FqtssBAPTrafficClass><ieee8021FqtssAdminIdleSlopeMs>0</ieee8021FqtssAdminIdleSlopeMs><ieee8021FqtssAdminIdleSlopeLs>0</ieee8021FqtssAdminIdleSlopeLs></ieee8021FqtssBapEntry><ieee8021FqtssBapEntry><ieee8021BridgeBaseComponentId>1</ieee8021BridgeBaseComponentId><ieee8021BridgeBasePort>sw0p1</ieee8021BridgeBasePort><ieee8021FqtssBAPTrafficClass>3</ieee8021FqtssBAPTrafficClass><ieee8021FqtssAdminIdleSlopeMs>0</ieee8021FqtssAdminIdleSlopeMs><ieee8021FqtssAdminIdleSlopeLs>0</ieee8021FqtssAdminIdleSlopeLs></ieee8021FqtssBapEntry><ieee8021FqtssBapEntry><ieee8021BridgeBaseComponentId>1</ieee8021BridgeBaseComponentId><ieee8021BridgeBasePort>sw0p1</ieee8021BridgeBasePort><ieee8021FqtssBAPTrafficClass>4</ieee8021FqtssBAPTrafficClass><ieee8021FqtssAdminIdleSlopeMs>0</ieee8021FqtssAdminIdleSlopeMs><ieee8021FqtssAdminIdleSlopeLs>0</ieee8021FqtssAdminIdleSlopeLs></ieee8021FqtssBapEntry><ieee8021FqtssBapEntry><ieee8021BridgeBaseComponentId>1</ieee8021BridgeBaseComponentId><ieee8021BridgeBasePort>sw0p1</ieee8021BridgeBasePort><ieee8021FqtssBAPTrafficClass>5</ieee8021FqtssBAPTrafficClass><ieee8021FqtssAdminIdleSlopeMs>0</ieee8021FqtssAdminIdleSlopeMs><ieee8021FqtssAdminIdleSlopeLs>0</ieee8021FqtssAdminIdleSlopeLs></ieee8021FqtssBapEntry><ieee8021FqtssBapEntry><ieee8021BridgeBaseComponentId>1</ieee8021BridgeBaseComponentId><ieee8021BridgeBasePort>sw0p1</ieee8021BridgeBasePort><ieee8021FqtssBAPTrafficClass>6</ieee8021FqtssBAPTrafficClass><ieee8021FqtssAdminIdleSlopeMs>0</ieee8021FqtssAdminIdleSlopeMs><ieee8021FqtssAdminIdleSlopeLs>0</ieee8021FqtssAdminIdleSlopeLs></ieee8021FqtssBapEntry><ieee8021FqtssBapEntry><ieee8021BridgeBaseComponentId>1</ieee8021BridgeBaseComponentId><ieee8021BridgeBasePort>sw0p1</ieee8021BridgeBasePort><ieee8021FqtssBAPTrafficClass>7</ieee8021FqtssBAPTrafficClass><ieee8021FqtssAdminIdleSlopeMs>0</ieee8021FqtssAdminIdleSlopeMs><ieee8021FqtssAdminIdleSlopeLs>0</ieee8021FqtssAdminIdleSlopeLs></ieee8021FqtssBapEntry><ieee8021FqtssBapEntry><ieee8021BridgeBaseComponentId>1</ieee8021BridgeBaseComponentId><ieee8021BridgeBasePort>sw0p2</ieee8021BridgeBasePort><ieee8021FqtssBAPTrafficClass>0</ieee8021FqtssBAPTrafficClass><ieee8021FqtssAdminIdleSlopeMs>0</ieee8021FqtssAdminIdleSlopeMs><ieee8021FqtssAdminIdleSlopeLs>0</ieee8021FqtssAdminIdleSlopeLs></ieee8021FqtssBapEntry><ieee8021FqtssBapEntry><ieee8021BridgeBaseComponentId>1</ieee8021BridgeBaseComponentId><ieee8021BridgeBasePort>sw0p2</ieee8021BridgeBasePort><ieee8021FqtssBAPTrafficClass>1</ieee8021FqtssBAPTrafficClass><ieee8021FqtssAdminIdleSlopeMs>0</ieee8021FqtssAdminIdleSlopeMs><ieee8021FqtssAdminIdleSlopeLs>0</ieee8021FqtssAdminIdleSlopeLs></ieee8021FqtssBapEntry><ieee8021FqtssBapEntry><ieee8021BridgeBaseComponentId>1</ieee8021BridgeBaseComponentId><ieee8021BridgeBasePort>sw0p2</ieee8021BridgeBasePort><ieee8021FqtssBAPTrafficClass>2</ieee8021FqtssBAPTrafficClass><ieee8021FqtssAdminIdleSlopeMs>0</ieee8021FqtssAdminIdleSlopeMs><ieee8021FqtssAdminIdleSlopeLs>0</ieee8021FqtssAdminIdleSlopeLs></ieee8021FqtssBapEntry><ieee8021FqtssBapEntry><ieee8021BridgeBaseComponentId>1</ieee8021BridgeBaseComponentId><ieee8021BridgeBasePort>sw0p2</ieee8021BridgeBasePort><ieee8021FqtssBAPTrafficClass>3</ieee8021FqtssBAPTrafficClass><ieee8021FqtssAdminIdleSlopeMs>0</ieee8021FqtssAdminIdleSlopeMs><ieee8021FqtssAdminIdleSlopeLs>0</ieee8021FqtssAdminIdleSlopeLs></ieee8021FqtssBapEntry><ieee8021FqtssBapEntry><ieee8021BridgeBaseComponentId>1</ieee8021BridgeBaseComponentId><ieee8021BridgeBasePort>sw0p2</ieee8021BridgeBasePort><ieee8021FqtssBAPTrafficClass>4</ieee8021FqtssBAPTrafficClass><ieee8021FqtssAdminIdleSlopeMs>0</ieee8021FqtssAdminIdleSlopeMs><ieee8021FqtssAdminIdleSlopeLs>0</ieee8021FqtssAdminIdleSlopeLs></ieee8021FqtssBapEntry><ieee8021FqtssBapEntry><ieee8021BridgeBaseComponentId>1</ieee8021BridgeBaseComponentId><ieee8021BridgeBasePort>sw0p2</ieee8021BridgeBasePort><ieee8021FqtssBAPTrafficClass>5</ieee8021FqtssBAPTrafficClass><ieee8021FqtssAdminIdleSlopeMs>0</ieee8021FqtssAdminIdleSlopeMs><ieee8021FqtssAdminIdleSlopeLs>0</ieee8021FqtssAdminIdleSlopeLs></ieee8021FqtssBapEntry><ieee8021FqtssBapEntry><ieee8021BridgeBaseComponentId>1</ieee8021BridgeBaseComponentId><ieee8021BridgeBasePort>sw0p2</ieee8021BridgeBasePort><ieee8021FqtssBAPTrafficClass>6</ieee8021FqtssBAPTrafficClass><ieee8021FqtssAdminIdleSlopeMs>0</ieee8021FqtssAdminIdleSlopeMs><ieee8021FqtssAdminIdleSlopeLs>0</ieee8021FqtssAdminIdleSlopeLs></ieee8021FqtssBapEntry><ieee8021FqtssBapEntry><ieee8021BridgeBaseComponentId>1</ieee8021BridgeBaseComponentId><ieee8021BridgeBasePort>sw0p2</ieee8021BridgeBasePort><ieee8021FqtssBAPTrafficClass>7</ieee8021FqtssBAPTrafficClass><ieee8021FqtssAdminIdleSlopeMs>0</ieee8021FqtssAdminIdleSlopeMs><ieee8021FqtssAdminIdleSlopeLs>0</ieee8021FqtssAdminIdleSlopeLs></ieee8021FqtssBapEntry><ieee8021FqtssBapEntry><ieee8021BridgeBaseComponentId>1</ieee8021BridgeBaseComponentId><ieee8021BridgeBasePort>sw0p3</ieee8021BridgeBasePort><ieee8021FqtssBAPTrafficClass>0</ieee8021FqtssBAPTrafficClass><ieee8021FqtssAdminIdleSlopeMs>0</ieee8021FqtssAdminIdleSlopeMs><ieee8021FqtssAdminIdleSlopeLs>0</ieee8021FqtssAdminIdleSlopeLs></ieee8021FqtssBapEntry><ieee8021FqtssBapEntry><ieee8021BridgeBaseComponentId>1</ieee8021BridgeBaseComponentId><ieee8021BridgeBasePort>sw0p3</ieee8021BridgeBasePort><ieee8021FqtssBAPTrafficClass>1</ieee8021FqtssBAPTrafficClass><ieee8021FqtssAdminIdleSlopeMs>0</ieee8021FqtssAdminIdleSlopeMs><ieee8021FqtssAdminIdleSlopeLs>0</ieee8021FqtssAdminIdleSlopeLs></ieee8021FqtssBapEntry><ieee8021FqtssBapEntry><ieee8021BridgeBaseComponentId>1</ieee8021BridgeBaseComponentId><ieee8021BridgeBasePort>sw0p3</ieee8021BridgeBasePort><ieee8021FqtssBAPTrafficClass>2</ieee8021FqtssBAPTrafficClass><ieee8021FqtssAdminIdleSlopeMs>0</ieee8021FqtssAdminIdleSlopeMs><ieee8021FqtssAdminIdleSlopeLs>0</ieee8021FqtssAdminIdleSlopeLs></ieee8021FqtssBapEntry><ieee8021FqtssBapEntry><ieee8021BridgeBaseComponentId>1</ieee8021BridgeBaseComponentId><ieee8021BridgeBasePort>sw0p3</ieee8021BridgeBasePort><ieee8021FqtssBAPTrafficClass>3</ieee8021FqtssBAPTrafficClass><ieee8021FqtssAdminIdleSlopeMs>0</ieee8021FqtssAdminIdleSlopeMs><ieee8021FqtssAdminIdleSlopeLs>0</ieee8021FqtssAdminIdleSlopeLs></ieee8021FqtssBapEntry><ieee8021FqtssBapEntry><ieee8021BridgeBaseComponentId>1</ieee8021BridgeBaseComponentId><ieee8021BridgeBasePort>sw0p3</ieee8021BridgeBasePort><ieee8021FqtssBAPTrafficClass>4</ieee8021FqtssBAPTrafficClass><ieee8021FqtssAdminIdleSlopeMs>0</ieee8021FqtssAdminIdleSlopeMs><ieee8021FqtssAdminIdleSlopeLs>0</ieee8021FqtssAdminIdleSlopeLs></ieee8021FqtssBapEntry><ieee8021FqtssBapEntry><ieee8021BridgeBaseComponentId>1</ieee8021BridgeBaseComponentId><ieee8021BridgeBasePort>sw0p3</ieee8021BridgeBasePort><ieee8021FqtssBAPTrafficClass>5</ieee8021FqtssBAPTrafficClass><ieee8021FqtssAdminIdleSlopeMs>0</ieee8021FqtssAdminIdleSlopeMs><ieee8021FqtssAdminIdleSlopeLs>0</ieee8021FqtssAdminIdleSlopeLs></ieee8021FqtssBapEntry><ieee8021FqtssBapEntry><ieee8021BridgeBaseComponentId>1</ieee8021BridgeBaseComponentId><ieee8021BridgeBasePort>sw0p3</ieee8021BridgeBasePort><ieee8021FqtssBAPTrafficClass>6</ieee8021FqtssBAPTrafficClass><ieee8021FqtssAdminIdleSlopeMs>0</ieee8021FqtssAdminIdleSlopeMs><ieee8021FqtssAdminIdleSlopeLs>0</ieee8021FqtssAdminIdleSlopeLs></ieee8021FqtssBapEntry><ieee8021FqtssBapEntry><ieee8021BridgeBaseComponentId>1</ieee8021BridgeBaseComponentId><ieee8021BridgeBasePort>sw0p3</ieee8021BridgeBasePort><ieee8021FqtssBAPTrafficClass>7</ieee8021FqtssBAPTrafficClass><ieee8021FqtssAdminIdleSlopeMs>0</ieee8021FqtssAdminIdleSlopeMs><ieee8021FqtssAdminIdleSlopeLs>0</ieee8021FqtssAdminIdleSlopeLs></ieee8021FqtssBapEntry><ieee8021FqtssBapEntry><ieee8021BridgeBaseComponentId>1</ieee8021BridgeBaseComponentId><ieee8021BridgeBasePort>sw0p4</ieee8021BridgeBasePort><ieee8021FqtssBAPTrafficClass>0</ieee8021FqtssBAPTrafficClass><ieee8021FqtssAdminIdleSlopeMs>0</ieee8021FqtssAdminIdleSlopeMs><ieee8021FqtssAdminIdleSlopeLs>0</ieee8021FqtssAdminIdleSlopeLs></ieee8021FqtssBapEntry><ieee8021FqtssBapEntry><ieee8021BridgeBaseComponentId>1</ieee8021BridgeBaseComponentId><ieee8021BridgeBasePort>sw0p4</ieee8021BridgeBasePort><ieee8021FqtssBAPTrafficClass>1</ieee8021FqtssBAPTrafficClass><ieee8021FqtssAdminIdleSlopeMs>0</ieee8021FqtssAdminIdleSlopeMs><ieee8021FqtssAdminIdleSlopeLs>0</ieee8021FqtssAdminIdleSlopeLs></ieee8021FqtssBapEntry><ieee8021FqtssBapEntry><ieee8021BridgeBaseComponentId>1</ieee8021BridgeBaseComponentId><ieee8021BridgeBasePort>sw0p4</ieee8021BridgeBasePort><ieee8021FqtssBAPTrafficClass>2</ieee8021FqtssBAPTrafficClass><ieee8021FqtssAdminIdleSlopeMs>0</ieee8021FqtssAdminIdleSlopeMs><ieee8021FqtssAdminIdleSlopeLs>0</ieee8021FqtssAdminIdleSlopeLs></ieee8021FqtssBapEntry><ieee8021FqtssBapEntry><ieee8021BridgeBaseComponentId>1</ieee8021BridgeBaseComponentId><ieee8021BridgeBasePort>sw0p4</ieee8021BridgeBasePort><ieee8021FqtssBAPTrafficClass>3</ieee8021FqtssBAPTrafficClass><ieee8021FqtssAdminIdleSlopeMs>0</ieee8021FqtssAdminIdleSlopeMs><ieee8021FqtssAdminIdleSlopeLs>0</ieee8021FqtssAdminIdleSlopeLs></ieee8021FqtssBapEntry><ieee8021FqtssBapEntry><ieee8021BridgeBaseComponentId>1</ieee8021BridgeBaseComponentId><ieee8021BridgeBasePort>sw0p4</ieee8021BridgeBasePort><ieee8021FqtssBAPTrafficClass>4</ieee8021FqtssBAPTrafficClass><ieee8021FqtssAdminIdleSlopeMs>0</ieee8021FqtssAdminIdleSlopeMs><ieee8021FqtssAdminIdleSlopeLs>0</ieee8021FqtssAdminIdleSlopeLs></ieee8021FqtssBapEntry><ieee8021FqtssBapEntry><ieee8021BridgeBaseComponentId>1</ieee8021BridgeBaseComponentId><ieee8021BridgeBasePort>sw0p4</ieee8021BridgeBasePort><ieee8021FqtssBAPTrafficClass>5</ieee8021FqtssBAPTrafficClass><ieee8021FqtssAdminIdleSlopeMs>0</ieee8021FqtssAdminIdleSlopeMs><ieee8021FqtssAdminIdleSlopeLs>0</ieee8021FqtssAdminIdleSlopeLs></ieee8021FqtssBapEntry><ieee8021FqtssBapEntry><ieee8021BridgeBaseComponentId>1</ieee8021BridgeBaseComponentId><ieee8021BridgeBasePort>sw0p4</ieee8021BridgeBasePort><ieee8021FqtssBAPTrafficClass>6</ieee8021FqtssBAPTrafficClass><ieee8021FqtssAdminIdleSlopeMs>0</ieee8021FqtssAdminIdleSlopeMs><ieee8021FqtssAdminIdleSlopeLs>0</ieee8021FqtssAdminIdleSlopeLs></ieee8021FqtssBapEntry><ieee8021FqtssBapEntry><ieee8021BridgeBaseComponentId>1</ieee8021BridgeBaseComponentId><ieee8021BridgeBasePort>sw0p4</ieee8021BridgeBasePort><ieee8021FqtssBAPTrafficClass>7</ieee8021FqtssBAPTrafficClass><ieee8021FqtssAdminIdleSlopeMs>0</ieee8021FqtssAdminIdleSlopeMs><ieee8021FqtssAdminIdleSlopeLs>0</ieee8021FqtssAdminIdleSlopeLs></ieee8021FqtssBapEntry><ieee8021FqtssBapEntry><ieee8021BridgeBaseComponentId>1</ieee8021BridgeBaseComponentId><ieee8021BridgeBasePort>sw0p5</ieee8021BridgeBasePort><ieee8021FqtssBAPTrafficClass>0</ieee8021FqtssBAPTrafficClass><ieee8021FqtssAdminIdleSlopeMs>0</ieee8021FqtssAdminIdleSlopeMs><ieee8021FqtssAdminIdleSlopeLs>0</ieee8021FqtssAdminIdleSlopeLs></ieee8021FqtssBapEntry><ieee8021FqtssBapEntry><ieee8021BridgeBaseComponentId>1</ieee8021BridgeBaseComponentId><ieee8021BridgeBasePort>sw0p5</ieee8021BridgeBasePort><ieee8021FqtssBAPTrafficClass>1</ieee8021FqtssBAPTrafficClass><ieee8021FqtssAdminIdleSlopeMs>0</ieee8021FqtssAdminIdleSlopeMs><ieee8021FqtssAdminIdleSlopeLs>0</ieee8021FqtssAdminIdleSlopeLs></ieee8021FqtssBapEntry><ieee8021FqtssBapEntry><ieee8021BridgeBaseComponentId>1</ieee8021BridgeBaseComponentId><ieee8021BridgeBasePort>sw0p5</ieee8021BridgeBasePort><ieee8021FqtssBAPTrafficClass>2</ieee8021FqtssBAPTrafficClass><ieee8021FqtssAdminIdleSlopeMs>0</ieee8021FqtssAdminIdleSlopeMs><ieee8021FqtssAdminIdleSlopeLs>0</ieee8021FqtssAdminIdleSlopeLs></ieee8021FqtssBapEntry><ieee8021FqtssBapEntry><ieee8021BridgeBaseComponentId>1</ieee8021BridgeBaseComponentId><ieee8021BridgeBasePort>sw0p5</ieee8021BridgeBasePort><ieee8021FqtssBAPTrafficClass>3</ieee8021FqtssBAPTrafficClass><ieee8021FqtssAdminIdleSlopeMs>0</ieee8021FqtssAdminIdleSlopeMs><ieee8021FqtssAdminIdleSlopeLs>0</ieee8021FqtssAdminIdleSlopeLs></ieee8021FqtssBapEntry><ieee8021FqtssBapEntry><ieee8021BridgeBaseComponentId>1</ieee8021BridgeBaseComponentId><ieee8021BridgeBasePort>sw0p5</ieee8021BridgeBasePort><ieee8021FqtssBAPTrafficClass>4</ieee8021FqtssBAPTrafficClass><ieee8021FqtssAdminIdleSlopeMs>0</ieee8021FqtssAdminIdleSlopeMs><ieee8021FqtssAdminIdleSlopeLs>0</ieee8021FqtssAdminIdleSlopeLs></ieee8021FqtssBapEntry><ieee8021FqtssBapEntry><ieee8021BridgeBaseComponentId>1</ieee8021BridgeBaseComponentId><ieee8021BridgeBasePort>sw0p5</ieee8021BridgeBasePort><ieee8021FqtssBAPTrafficClass>5</ieee8021FqtssBAPTrafficClass><ieee8021FqtssAdminIdleSlopeMs>0</ieee8021FqtssAdminIdleSlopeMs><ieee8021FqtssAdminIdleSlopeLs>0</ieee8021FqtssAdminIdleSlopeLs></ieee8021FqtssBapEntry><ieee8021FqtssBapEntry><ieee8021BridgeBaseComponentId>1</ieee8021BridgeBaseComponentId><ieee8021BridgeBasePort>sw0p5</ieee8021BridgeBasePort><ieee8021FqtssBAPTrafficClass>6</ieee8021FqtssBAPTrafficClass><ieee8021FqtssAdminIdleSlopeMs>0</ieee8021FqtssAdminIdleSlopeMs><ieee8021FqtssAdminIdleSlopeLs>0</ieee8021FqtssAdminIdleSlopeLs></ieee8021FqtssBapEntry><ieee8021FqtssBapEntry><ieee8021BridgeBaseComponentId>1</ieee8021BridgeBaseComponentId><ieee8021BridgeBasePort>sw0p5</ieee8021BridgeBasePort><ieee8021FqtssBAPTrafficClass>7</ieee8021FqtssBAPTrafficClass><ieee8021FqtssAdminIdleSlopeMs>0</ieee8021FqtssAdminIdleSlopeMs><ieee8021FqtssAdminIdleSlopeLs>0</ieee8021FqtssAdminIdleSlopeLs></ieee8021FqtssBapEntry></ieee8021FqtssBapTable><ieee8021FqtssTxSelectionAlgorithmTable><ieee8021FqtssTxSelectionAlgorithmEntry><ieee8021BridgeBaseComponentId>1</ieee8021BridgeBaseComponentId><ieee8021BridgeBasePort>sw0p1</ieee8021BridgeBasePort><ieee8021FqtssTrafficClass>0</ieee8021FqtssTrafficClass><ieee8021FqtssTxSelectionAlgorithmID>0</ieee8021FqtssTxSelectionAlgorithmID></ieee8021FqtssTxSelectionAlgorithmEntry><ieee8021FqtssTxSelectionAlgorithmEntry><ieee8021BridgeBaseComponentId>1</ieee8021BridgeBaseComponentId><ieee8021BridgeBasePort>sw0p1</ieee8021BridgeBasePort><ieee8021FqtssTrafficClass>1</ieee8021FqtssTrafficClass><ieee8021FqtssTxSelectionAlgorithmID>0</ieee8021FqtssTxSelectionAlgorithmID></ieee8021FqtssTxSelectionAlgorithmEntry><ieee8021FqtssTxSelectionAlgorithmEntry><ieee8021BridgeBaseComponentId>1</ieee8021BridgeBaseComponentId><ieee8021BridgeBasePort>sw0p1</ieee8021BridgeBasePort><ieee8021FqtssTrafficClass>2</ieee8021FqtssTrafficClass><ieee8021FqtssTxSelectionAlgorithmID>0</ieee8021FqtssTxSelectionAlgorithmID></ieee8021FqtssTxSelectionAlgorithmEntry><ieee8021FqtssTxSelectionAlgorithmEntry><ieee8021BridgeBaseComponentId>1</ieee8021BridgeBaseComponentId><ieee8021BridgeBasePort>sw0p1</ieee8021BridgeBasePort><ieee8021FqtssTrafficClass>3</ieee8021FqtssTrafficClass><ieee8021FqtssTxSelectionAlgorithmID>0</ieee8021FqtssTxSelectionAlgorithmID></ieee8021FqtssTxSelectionAlgorithmEntry><ieee8021FqtssTxSelectionAlgorithmEntry><ieee8021BridgeBaseComponentId>1</ieee8021BridgeBaseComponentId><ieee8021BridgeBasePort>sw0p1</ieee8021BridgeBasePort><ieee8021FqtssTrafficClass>4</ieee8021FqtssTrafficClass><ieee8021FqtssTxSelectionAlgorithmID>0</ieee8021FqtssTxSelectionAlgorithmID></ieee8021FqtssTxSelectionAlgorithmEntry><ieee8021FqtssTxSelectionAlgorithmEntry><ieee8021BridgeBaseComponentId>1</ieee8021BridgeBaseComponentId><ieee8021BridgeBasePort>sw0p1</ieee8021BridgeBasePort><ieee8021FqtssTrafficClass>5</ieee8021FqtssTrafficClass><ieee8021FqtssTxSelectionAlgorithmID>0</ieee8021FqtssTxSelectionAlgorithmID></ieee8021FqtssTxSelectionAlgorithmEntry><ieee8021FqtssTxSelectionAlgorithmEntry><ieee8021BridgeBaseComponentId>1</ieee8021BridgeBaseComponentId><ieee8021BridgeBasePort>sw0p1</ieee8021BridgeBasePort><ieee8021FqtssTrafficClass>6</ieee8021FqtssTrafficClass><ieee8021FqtssTxSelectionAlgorithmID>0</ieee8021FqtssTxSelectionAlgorithmID></ieee8021FqtssTxSelectionAlgorithmEntry><ieee8021FqtssTxSelectionAlgorithmEntry><ieee8021BridgeBaseComponentId>1</ieee8021BridgeBaseComponentId><ieee8021BridgeBasePort>sw0p1</ieee8021BridgeBasePort><ieee8021FqtssTrafficClass>7</ieee8021FqtssTrafficClass><ieee8021FqtssTxSelectionAlgorithmID>0</ieee8021FqtssTxSelectionAlgorithmID></ieee8021FqtssTxSelectionAlgorithmEntry><ieee8021FqtssTxSelectionAlgorithmEntry><ieee8021BridgeBaseComponentId>1</ieee8021BridgeBaseComponentId><ieee8021BridgeBasePort>sw0p2</ieee8021BridgeBasePort><ieee8021FqtssTrafficClass>0</ieee8021FqtssTrafficClass><ieee8021FqtssTxSelectionAlgorithmID>0</ieee8021FqtssTxSelectionAlgorithmID></ieee8021FqtssTxSelectionAlgorithmEntry><ieee8021FqtssTxSelectionAlgorithmEntry><ieee8021BridgeBaseComponentId>1</ieee8021BridgeBaseComponentId><ieee8021BridgeBasePort>sw0p2</ieee8021BridgeBasePort><ieee8021FqtssTrafficClass>1</ieee8021FqtssTrafficClass><ieee8021FqtssTxSelectionAlgorithmID>0</ieee8021FqtssTxSelectionAlgorithmID></ieee8021FqtssTxSelectionAlgorithmEntry><ieee8021FqtssTxSelectionAlgorithmEntry><ieee8021BridgeBaseComponentId>1</ieee8021BridgeBaseComponentId><ieee8021BridgeBasePort>sw0p2</ieee8021BridgeBasePort><ieee8021FqtssTrafficClass>2</ieee8021FqtssTrafficClass><ieee8021FqtssTxSelectionAlgorithmID>0</ieee8021FqtssTxSelectionAlgorithmID></ieee8021FqtssTxSelectionAlgorithmEntry><ieee8021FqtssTxSelectionAlgorithmEntry><ieee8021BridgeBaseComponentId>1</ieee8021BridgeBaseComponentId><ieee8021BridgeBasePort>sw0p2</ieee8021BridgeBasePort><ieee8021FqtssTrafficClass>3</ieee8021FqtssTrafficClass><ieee8021FqtssTxSelectionAlgorithmID>0</ieee8021FqtssTxSelectionAlgorithmID></ieee8021FqtssTxSelectionAlgorithmEntry><ieee8021FqtssTxSelectionAlgorithmEntry><ieee8021BridgeBaseComponentId>1</ieee8021BridgeBaseComponentId><ieee8021BridgeBasePort>sw0p2</ieee8021BridgeBasePort><ieee8021FqtssTrafficClass>4</ieee8021FqtssTrafficClass><ieee8021FqtssTxSelectionAlgorithmID>0</ieee8021FqtssTxSelectionAlgorithmID></ieee8021FqtssTxSelectionAlgorithmEntry><ieee8021FqtssTxSelectionAlgorithmEntry><ieee8021BridgeBaseComponentId>1</ieee8021BridgeBaseComponentId><ieee8021BridgeBasePort>sw0p2</ieee8021BridgeBasePort><ieee8021FqtssTrafficClass>5</ieee8021FqtssTrafficClass><ieee8021FqtssTxSelectionAlgorithmID>0</ieee8021FqtssTxSelectionAlgorithmID></ieee8021FqtssTxSelectionAlgorithmEntry><ieee8021FqtssTxSelectionAlgorithmEntry><ieee8021BridgeBaseComponentId>1</ieee8021BridgeBaseComponentId><ieee8021BridgeBasePort>sw0p2</ieee8021BridgeBasePort><ieee8021FqtssTrafficClass>6</ieee8021FqtssTrafficClass><ieee8021FqtssTxSelectionAlgorithmID>0</ieee8021FqtssTxSelectionAlgorithmID></ieee8021FqtssTxSelectionAlgorithmEntry><ieee8021FqtssTxSelectionAlgorithmEntry><ieee8021BridgeBaseComponentId>1</ieee8021BridgeBaseComponentId><ieee8021BridgeBasePort>sw0p2</ieee8021BridgeBasePort><ieee8021FqtssTrafficClass>7</ieee8021FqtssTrafficClass><ieee8021FqtssTxSelectionAlgorithmID>0</ieee8021FqtssTxSelectionAlgorithmID></ieee8021FqtssTxSelectionAlgorithmEntry><ieee8021FqtssTxSelectionAlgorithmEntry><ieee8021BridgeBaseComponentId>1</ieee8021BridgeBaseComponentId><ieee8021BridgeBasePort>sw0p3</ieee8021BridgeBasePort><ieee8021FqtssTrafficClass>0</ieee8021FqtssTrafficClass><ieee8021FqtssTxSelectionAlgorithmID>0</ieee8021FqtssTxSelectionAlgorithmID></ieee8021FqtssTxSelectionAlgorithmEntry><ieee8021FqtssTxSelectionAlgorithmEntry><ieee8021BridgeBaseComponentId>1</ieee8021BridgeBaseComponentId><ieee8021BridgeBasePort>sw0p3</ieee8021BridgeBasePort><ieee8021FqtssTrafficClass>1</ieee8021FqtssTrafficClass><ieee8021FqtssTxSelectionAlgorithmID>0</ieee8021FqtssTxSelectionAlgorithmID></ieee8021FqtssTxSelectionAlgorithmEntry><ieee8021FqtssTxSelectionAlgorithmEntry><ieee8021BridgeBaseComponentId>1</ieee8021BridgeBaseComponentId><ieee8021BridgeBasePort>sw0p3</ieee8021BridgeBasePort><ieee8021FqtssTrafficClass>2</ieee8021FqtssTrafficClass><ieee8021FqtssTxSelectionAlgorithmID>0</ieee8021FqtssTxSelectionAlgorithmID></ieee8021FqtssTxSelectionAlgorithmEntry><ieee8021FqtssTxSelectionAlgorithmEntry><ieee8021BridgeBaseComponentId>1</ieee8021BridgeBaseComponentId><ieee8021BridgeBasePort>sw0p3</ieee8021BridgeBasePort><ieee8021FqtssTrafficClass>3</ieee8021FqtssTrafficClass><ieee8021FqtssTxSelectionAlgorithmID>0</ieee8021FqtssTxSelectionAlgorithmID></ieee8021FqtssTxSelectionAlgorithmEntry><ieee8021FqtssTxSelectionAlgorithmEntry><ieee8021BridgeBaseComponentId>1</ieee8021BridgeBaseComponentId><ieee8021BridgeBasePort>sw0p3</ieee8021BridgeBasePort><ieee8021FqtssTrafficClass>4</ieee8021FqtssTrafficClass><ieee8021FqtssTxSelectionAlgorithmID>0</ieee8021FqtssTxSelectionAlgorithmID></ieee8021FqtssTxSelectionAlgorithmEntry><ieee8021FqtssTxSelectionAlgorithmEntry><ieee8021BridgeBaseComponentId>1</ieee8021BridgeBaseComponentId><ieee8021BridgeBasePort>sw0p3</ieee8021BridgeBasePort><ieee8021FqtssTrafficClass>5</ieee8021FqtssTrafficClass><ieee8021FqtssTxSelectionAlgorithmID>0</ieee8021FqtssTxSelectionAlgorithmID></ieee8021FqtssTxSelectionAlgorithmEntry><ieee8021FqtssTxSelectionAlgorithmEntry><ieee8021BridgeBaseComponentId>1</ieee8021BridgeBaseComponentId><ieee8021BridgeBasePort>sw0p3</ieee8021BridgeBasePort><ieee8021FqtssTrafficClass>6</ieee8021FqtssTrafficClass><ieee8021FqtssTxSelectionAlgorithmID>0</ieee8021FqtssTxSelectionAlgorithmID></ieee8021FqtssTxSelectionAlgorithmEntry><ieee8021FqtssTxSelectionAlgorithmEntry><ieee8021BridgeBaseComponentId>1</ieee8021BridgeBaseComponentId><ieee8021BridgeBasePort>sw0p3</ieee8021BridgeBasePort><ieee8021FqtssTrafficClass>7</ieee8021FqtssTrafficClass><ieee8021FqtssTxSelectionAlgorithmID>0</ieee8021FqtssTxSelectionAlgorithmID></ieee8021FqtssTxSelectionAlgorithmEntry><ieee8021FqtssTxSelectionAlgorithmEntry><ieee8021BridgeBaseComponentId>1</ieee8021BridgeBaseComponentId><ieee8021BridgeBasePort>sw0p4</ieee8021BridgeBasePort><ieee8021FqtssTrafficClass>0</ieee8021FqtssTrafficClass><ieee8021FqtssTxSelectionAlgorithmID>0</ieee8021FqtssTxSelectionAlgorithmID></ieee8021FqtssTxSelectionAlgorithmEntry><ieee8021FqtssTxSelectionAlgorithmEntry><ieee8021BridgeBaseComponentId>1</ieee8021BridgeBaseComponentId><ieee8021BridgeBasePort>sw0p4</ieee8021BridgeBasePort><ieee8021FqtssTrafficClass>1</ieee8021FqtssTrafficClass><ieee8021FqtssTxSelectionAlgorithmID>0</ieee8021FqtssTxSelectionAlgorithmID></ieee8021FqtssTxSelectionAlgorithmEntry><ieee8021FqtssTxSelectionAlgorithmEntry><ieee8021BridgeBaseComponentId>1</ieee8021BridgeBaseComponentId><ieee8021BridgeBasePort>sw0p4</ieee8021BridgeBasePort><ieee8021FqtssTrafficClass>2</ieee8021FqtssTrafficClass><ieee8021FqtssTxSelectionAlgorithmID>0</ieee8021FqtssTxSelectionAlgorithmID></ieee8021FqtssTxSelectionAlgorithmEntry><ieee8021FqtssTxSelectionAlgorithmEntry><ieee8021BridgeBaseComponentId>1</ieee8021BridgeBaseComponentId><ieee8021BridgeBasePort>sw0p4</ieee8021BridgeBasePort><ieee8021FqtssTrafficClass>3</ieee8021FqtssTrafficClass><ieee8021FqtssTxSelectionAlgorithmID>0</ieee8021FqtssTxSelectionAlgorithmID></ieee8021FqtssTxSelectionAlgorithmEntry><ieee8021FqtssTxSelectionAlgorithmEntry><ieee8021BridgeBaseComponentId>1</ieee8021BridgeBaseComponentId><ieee8021BridgeBasePort>sw0p4</ieee8021BridgeBasePort><ieee8021FqtssTrafficClass>4</ieee8021FqtssTrafficClass><ieee8021FqtssTxSelectionAlgorithmID>0</ieee8021FqtssTxSelectionAlgorithmID></ieee8021FqtssTxSelectionAlgorithmEntry><ieee8021FqtssTxSelectionAlgorithmEntry><ieee8021BridgeBaseComponentId>1</ieee8021BridgeBaseComponentId><ieee8021BridgeBasePort>sw0p4</ieee8021BridgeBasePort><ieee8021FqtssTrafficClass>5</ieee8021FqtssTrafficClass><ieee8021FqtssTxSelectionAlgorithmID>0</ieee8021FqtssTxSelectionAlgorithmID></ieee8021FqtssTxSelectionAlgorithmEntry><ieee8021FqtssTxSelectionAlgorithmEntry><ieee8021BridgeBaseComponentId>1</ieee8021BridgeBaseComponentId><ieee8021BridgeBasePort>sw0p4</ieee8021BridgeBasePort><ieee8021FqtssTrafficClass>6</ieee8021FqtssTrafficClass><ieee8021FqtssTxSelectionAlgorithmID>0</ieee8021FqtssTxSelectionAlgorithmID></ieee8021FqtssTxSelectionAlgorithmEntry><ieee8021FqtssTxSelectionAlgorithmEntry><ieee8021BridgeBaseComponentId>1</ieee8021BridgeBaseComponentId><ieee8021BridgeBasePort>sw0p4</ieee8021BridgeBasePort><ieee8021FqtssTrafficClass>7</ieee8021FqtssTrafficClass><ieee8021FqtssTxSelectionAlgorithmID>0</ieee8021FqtssTxSelectionAlgorithmID></ieee8021FqtssTxSelectionAlgorithmEntry><ieee8021FqtssTxSelectionAlgorithmEntry><ieee8021BridgeBaseComponentId>1</ieee8021BridgeBaseComponentId><ieee8021BridgeBasePort>sw0p5</ieee8021BridgeBasePort><ieee8021FqtssTrafficClass>0</ieee8021FqtssTrafficClass><ieee8021FqtssTxSelectionAlgorithmID>0</ieee8021FqtssTxSelectionAlgorithmID></ieee8021FqtssTxSelectionAlgorithmEntry><ieee8021FqtssTxSelectionAlgorithmEntry><ieee8021BridgeBaseComponentId>1</ieee8021BridgeBaseComponentId><ieee8021BridgeBasePort>sw0p5</ieee8021BridgeBasePort><ieee8021FqtssTrafficClass>1</ieee8021FqtssTrafficClass><ieee8021FqtssTxSelectionAlgorithmID>0</ieee8021FqtssTxSelectionAlgorithmID></ieee8021FqtssTxSelectionAlgorithmEntry><ieee8021FqtssTxSelectionAlgorithmEntry><ieee8021BridgeBaseComponentId>1</ieee8021BridgeBaseComponentId><ieee8021BridgeBasePort>sw0p5</ieee8021BridgeBasePort><ieee8021FqtssTrafficClass>2</ieee8021FqtssTrafficClass><ieee8021FqtssTxSelectionAlgorithmID>0</ieee8021FqtssTxSelectionAlgorithmID></ieee8021FqtssTxSelectionAlgorithmEntry><ieee8021FqtssTxSelectionAlgorithmEntry><ieee8021BridgeBaseComponentId>1</ieee8021BridgeBaseComponentId><ieee8021BridgeBasePort>sw0p5</ieee8021BridgeBasePort><ieee8021FqtssTrafficClass>3</ieee8021FqtssTrafficClass><ieee8021FqtssTxSelectionAlgorithmID>0</ieee8021FqtssTxSelectionAlgorithmID></ieee8021FqtssTxSelectionAlgorithmEntry><ieee8021FqtssTxSelectionAlgorithmEntry><ieee8021BridgeBaseComponentId>1</ieee8021BridgeBaseComponentId><ieee8021BridgeBasePort>sw0p5</ieee8021BridgeBasePort><ieee8021FqtssTrafficClass>4</ieee8021FqtssTrafficClass><ieee8021FqtssTxSelectionAlgorithmID>0</ieee8021FqtssTxSelectionAlgorithmID></ieee8021FqtssTxSelectionAlgorithmEntry><ieee8021FqtssTxSelectionAlgorithmEntry><ieee8021BridgeBaseComponentId>1</ieee8021BridgeBaseComponentId><ieee8021BridgeBasePort>sw0p5</ieee8021BridgeBasePort><ieee8021FqtssTrafficClass>5</ieee8021FqtssTrafficClass><ieee8021FqtssTxSelectionAlgorithmID>0</ieee8021FqtssTxSelectionAlgorithmID></ieee8021FqtssTxSelectionAlgorithmEntry><ieee8021FqtssTxSelectionAlgorithmEntry><ieee8021BridgeBaseComponentId>1</ieee8021BridgeBaseComponentId><ieee8021BridgeBasePort>sw0p5</ieee8021BridgeBasePort><ieee8021FqtssTrafficClass>6</ieee8021FqtssTrafficClass><ieee8021FqtssTxSelectionAlgorithmID>0</ieee8021FqtssTxSelectionAlgorithmID></ieee8021FqtssTxSelectionAlgorithmEntry><ieee8021FqtssTxSelectionAlgorithmEntry><ieee8021BridgeBaseComponentId>1</ieee8021BridgeBaseComponentId><ieee8021BridgeBasePort>sw0p5</ieee8021BridgeBasePort><ieee8021FqtssTrafficClass>7</ieee8021FqtssTrafficClass><ieee8021FqtssTxSelectionAlgorithmID>0</ieee8021FqtssTxSelectionAlgorithmID></ieee8021FqtssTxSelectionAlgorithmEntry></ieee8021FqtssTxSelectionAlgorithmTable></ieee802-dot1q-fqtss><interfaces xmlns="urn:ietf:params:xml:ns:yang:ietf-interfaces"><interface><name>lo</name><type xmlns:ianaift="urn:ietf:params:xml:ns:yang:iana-if-type">ianaift:ethernetCsmacd</type><enabled>true</enabled></interface><interface><name>eth0</name><type xmlns:ianaift="urn:ietf:params:xml:ns:yang:iana-if-type">ianaift:ethernetCsmacd</type></interface><interface><name>sw0p1</name><type xmlns:ianaift="urn:ietf:params:xml:ns:yang:iana-if-type">ianaift:ethernetCsmacd</type><enabled>true</enabled><max-sdu-table xmlns="urn:ieee:std:802.1Q:yang:ieee802-dot1q-sched"><traffic-class>0</traffic-class><queue-max-sdu>1504</queue-max-sdu></max-sdu-table><max-sdu-table xmlns="urn:ieee:std:802.1Q:yang:ieee802-dot1q-sched"><traffic-class>1</traffic-class><queue-max-sdu>1504</queue-max-sdu></max-sdu-table><max-sdu-table xmlns="urn:ieee:std:802.1Q:yang:ieee802-dot1q-sched"><traffic-class>2</traffic-class><queue-max-sdu>1504</queue-max-sdu></max-sdu-table><max-sdu-table xmlns="urn:ieee:std:802.1Q:yang:ieee802-dot1q-sched"><traffic-class>3</traffic-class><queue-max-sdu>1504</queue-max-sdu></max-sdu-table><max-sdu-table xmlns="urn:ieee:std:802.1Q:yang:ieee802-dot1q-sched"><traffic-class>4</traffic-class><queue-max-sdu>1504</queue-max-sdu></max-sdu-table><max-sdu-table xmlns="urn:ieee:std:802.1Q:yang:ieee802-dot1q-sched"><traffic-class>5</traffic-class><queue-max-sdu>1504</queue-max-sdu></max-sdu-table><max-sdu-table xmlns="urn:ieee:std:802.1Q:yang:ieee802-dot1q-sched"><traffic-class>6</traffic-class><queue-max-sdu>1504</queue-max-sdu></max-sdu-table><max-sdu-table xmlns="urn:ieee:std:802.1Q:yang:ieee802-dot1q-sched"><traffic-class>7</traffic-class><queue-max-sdu>1504</queue-max-sdu></max-sdu-table><gate-parameters xmlns="urn:ieee:std:802.1Q:yang:ieee802-dot1q-sched"><gate-enabled>false</gate-enabled><admin-gate-states>255</admin-gate-states><admin-control-list-length>0</admin-control-list-length><admin-cycle-time><numerator>0</numerator><denominator>1</denominator></admin-cycle-time><admin-cycle-time-extension>0</admin-cycle-time-extension><admin-base-time><seconds>0</seconds><fractional-seconds>0</fractional-seconds></admin-base-time><config-change>false</config-change></gate-parameters><bridge-port xmlns="urn:ieee:std:802.1Q:yang:ieee802-dot1q-bridge"><component-name>br0</component-name><port-type>c-vlan-bridge-port</port-type><pvid>1</pvid><default-priority>0</default-priority><priority-regeneration><priority0>0</priority0><priority1>1</priority1><priority2>2</priority2><priority3>3</priority3><priority4>4</priority4><priority5>5</priority5><priority6>6</priority6><priority7>7</priority7></priority-regeneration><traffic-class><priority0>0</priority0><priority1>1</priority1><priority2>2</priority2><priority3>3</priority3><priority4>4</priority4><priority5>5</priority5><priority6>6</priority6><priority7>7</priority7></traffic-class><acceptable-frame>admit-all-frames</acceptable-frame><enable-ingress-filtering>true</enable-ingress-filtering></bridge-port><ethernet xmlns="urn:ieee:std:802.3:yang:ieee802-ethernet-interface"><auto-negotiation><enable>false</enable></auto-negotiation></ethernet></interface><interface><name>sw0p2</name><type xmlns:ianaift="urn:ietf:params:xml:ns:yang:iana-if-type">ianaift:ethernetCsmacd</type><enabled>true</enabled><max-sdu-table xmlns="urn:ieee:std:802.1Q:yang:ieee802-dot1q-sched"><traffic-class>0</traffic-class><queue-max-sdu>1504</queue-max-sdu></max-sdu-table><max-sdu-table xmlns="urn:ieee:std:802.1Q:yang:ieee802-dot1q-sched"><traffic-class>1</traffic-class><queue-max-sdu>1504</queue-max-sdu></max-sdu-table><max-sdu-table xmlns="urn:ieee:std:802.1Q:yang:ieee802-dot1q-sched"><traffic-class>2</traffic-class><queue-max-sdu>1504</queue-max-sdu></max-sdu-table><max-sdu-table xmlns="urn:ieee:std:802.1Q:yang:ieee802-dot1q-sched"><traffic-class>3</traffic-class><queue-max-sdu>1504</queue-max-sdu></max-sdu-table><max-sdu-table xmlns="urn:ieee:std:802.1Q:yang:ieee802-dot1q-sched"><traffic-class>4</traffic-class><queue-max-sdu>1504</queue-max-sdu></max-sdu-table><max-sdu-table xmlns="urn:ieee:std:802.1Q:yang:ieee802-dot1q-sched"><traffic-class>5</traffic-class><queue-max-sdu>1504</queue-max-sdu></max-sdu-table><max-sdu-table xmlns="urn:ieee:std:802.1Q:yang:ieee802-dot1q-sched"><traffic-class>6</traffic-class><queue-max-sdu>1504</queue-max-sdu></max-sdu-table><max-sdu-table xmlns="urn:ieee:std:802.1Q:yang:ieee802-dot1q-sched"><traffic-class>7</traffic-class><queue-max-sdu>1504</queue-max-sdu></max-sdu-table><gate-parameters xmlns="urn:ieee:std:802.1Q:yang:ieee802-dot1q-sched"><gate-enabled>false</gate-enabled><admin-gate-states>255</admin-gate-states><admin-control-list-length>0</admin-control-list-length><admin-cycle-time><numerator>0</numerator><denominator>1</denominator></admin-cycle-time><admin-cycle-time-extension>0</admin-cycle-time-extension><admin-base-time><seconds>0</seconds><fractional-seconds>0</fractional-seconds></admin-base-time><config-change>false</config-change></gate-parameters><mac-merge xmlns="urn:ieee:std:802.1Q:yang:ieee802-dot1q-preempt"><admin-control><merge-enable-tx>Disabled</merge-enable-tx><verify-disable-tx>Disabled</verify-disable-tx><verify-time>10</verify-time><frag-size>0</frag-size></admin-control></mac-merge><frame-preemption-parameters xmlns="urn:ieee:std:802.1Q:yang:ieee802-dot1q-preemption"><frame-preemption-status-table><traffic-class>0</traffic-class><frame-preemption-status>express</frame-preemption-status></frame-preemption-status-table><frame-preemption-status-table><traffic-class>1</traffic-class><frame-preemption-status>express</frame-preemption-status></frame-preemption-status-table><frame-preemption-status-table><traffic-class>2</traffic-class><frame-preemption-status>express</frame-preemption-status></frame-preemption-status-table><frame-preemption-status-table><traffic-class>3</traffic-class><frame-preemption-status>express</frame-preemption-status></frame-preemption-status-table><frame-preemption-status-table><traffic-class>4</traffic-class><frame-preemption-status>express</frame-preemption-status></frame-preemption-status-table><frame-preemption-status-table><traffic-class>5</traffic-class><frame-preemption-status>express</frame-preemption-status></frame-preemption-status-table><frame-preemption-status-table><traffic-class>6</traffic-class><frame-preemption-status>express</frame-preemption-status></frame-preemption-status-table><frame-preemption-status-table><traffic-class>7</traffic-class><frame-preemption-status>express</frame-preemption-status></frame-preemption-status-table></frame-preemption-parameters><bridge-port xmlns="urn:ieee:std:802.1Q:yang:ieee802-dot1q-bridge"><component-name>br0</component-name><port-type>c-vlan-bridge-port</port-type><pvid>1</pvid><default-priority>0</default-priority><priority-regeneration><priority0>0</priority0><priority1>1</priority1><priority2>2</priority2><priority3>3</priority3><priority4>4</priority4><priority5>5</priority5><priority6>6</priority6><priority7>7</priority7></priority-regeneration><traffic-class><priority0>0</priority0><priority1>1</priority1><priority2>2</priority2><priority3>3</priority3><priority4>4</priority4><priority5>5</priority5><priority6>6</priority6><priority7>7</priority7></traffic-class><acceptable-frame>admit-all-frames</acceptable-frame><enable-ingress-filtering>true</enable-ingress-filtering></bridge-port><ethernet xmlns="urn:ieee:std:802.3:yang:ieee802-ethernet-interface"><auto-negotiation><enable>true</enable></auto-negotiation></ethernet></interface><interface><name>sw0p3</name><type xmlns:ianaift="urn:ietf:params:xml:ns:yang:iana-if-type">ianaift:ethernetCsmacd</type><enabled>true</enabled><max-sdu-table xmlns="urn:ieee:std:802.1Q:yang:ieee802-dot1q-sched"><traffic-class>0</traffic-class><queue-max-sdu>1504</queue-max-sdu></max-sdu-table><max-sdu-table xmlns="urn:ieee:std:802.1Q:yang:ieee802-dot1q-sched"><traffic-class>1</traffic-class><queue-max-sdu>1504</queue-max-sdu></max-sdu-table><max-sdu-table xmlns="urn:ieee:std:802.1Q:yang:ieee802-dot1q-sched"><traffic-class>2</traffic-class><queue-max-sdu>1504</queue-max-sdu></max-sdu-table><max-sdu-table xmlns="urn:ieee:std:802.1Q:yang:ieee802-dot1q-sched"><traffic-class>3</traffic-class><queue-max-sdu>1504</queue-max-sdu></max-sdu-table><max-sdu-table xmlns="urn:ieee:std:802.1Q:yang:ieee802-dot1q-sched"><traffic-class>4</traffic-class><queue-max-sdu>1504</queue-max-sdu></max-sdu-table><max-sdu-table xmlns="urn:ieee:std:802.1Q:yang:ieee802-dot1q-sched"><traffic-class>5</traffic-class><queue-max-sdu>1504</queue-max-sdu></max-sdu-table><max-sdu-table xmlns="urn:ieee:std:802.1Q:yang:ieee802-dot1q-sched"><traffic-class>6</traffic-class><queue-max-sdu>1504</queue-max-sdu></max-sdu-table><max-sdu-table xmlns="urn:ieee:std:802.1Q:yang:ieee802-dot1q-sched"><traffic-class>7</traffic-class><queue-max-sdu>1504</queue-max-sdu></max-sdu-table><gate-parameters xmlns="urn:ieee:std:802.1Q:yang:ieee802-dot1q-sched"><gate-enabled>false</gate-enabled><admin-gate-states>255</admin-gate-states><admin-control-list-length>0</admin-control-list-length><admin-cycle-time><numerator>0</numerator><denominator>1</denominator></admin-cycle-time><admin-cycle-time-extension>0</admin-cycle-time-extension><admin-base-time><seconds>0</seconds><fractional-seconds>0</fractional-seconds></admin-base-time><config-change>false</config-change></gate-parameters><mac-merge xmlns="urn:ieee:std:802.1Q:yang:ieee802-dot1q-preempt"><admin-control><merge-enable-tx>Disabled</merge-enable-tx><verify-disable-tx>Disabled</verify-disable-tx><verify-time>10</verify-time><frag-size>0</frag-size></admin-control></mac-merge><frame-preemption-parameters xmlns="urn:ieee:std:802.1Q:yang:ieee802-dot1q-preemption"><frame-preemption-status-table><traffic-class>0</traffic-class><frame-preemption-status>express</frame-preemption-status></frame-preemption-status-table><frame-preemption-status-table><traffic-class>1</traffic-class><frame-preemption-status>express</frame-preemption-status></frame-preemption-status-table><frame-preemption-status-table><traffic-class>2</traffic-class><frame-preemption-status>express</frame-preemption-status></frame-preemption-status-table><frame-preemption-status-table><traffic-class>3</traffic-class><frame-preemption-status>express</frame-preemption-status></frame-preemption-status-table><frame-preemption-status-table><traffic-class>4</traffic-class><frame-preemption-status>express</frame-preemption-status></frame-preemption-status-table><frame-preemption-status-table><traffic-class>5</traffic-class><frame-preemption-status>express</frame-preemption-status></frame-preemption-status-table><frame-preemption-status-table><traffic-class>6</traffic-class><frame-preemption-status>express</frame-preemption-status></frame-preemption-status-table><frame-preemption-status-table><traffic-class>7</traffic-class><frame-preemption-status>express</frame-preemption-status></frame-preemption-status-table></frame-preemption-parameters><bridge-port xmlns="urn:ieee:std:802.1Q:yang:ieee802-dot1q-bridge"><component-name>br0</component-name><port-type>c-vlan-bridge-port</port-type><pvid>1</pvid><default-priority>0</default-priority><priority-regeneration><priority0>0</priority0><priority1>1</priority1><priority2>2</priority2><priority3>3</priority3><priority4>4</priority4><priority5>5</priority5><priority6>6</priority6><priority7>7</priority7></priority-regeneration><traffic-class><priority0>0</priority0><priority1>1</priority1><priority2>2</priority2><priority3>3</priority3><priority4>4</priority4><priority5>5</priority5><priority6>6</priority6><priority7>7</priority7></traffic-class><acceptable-frame>admit-all-frames</acceptable-frame><enable-ingress-filtering>true</enable-ingress-filtering></bridge-port><ethernet xmlns="urn:ieee:std:802.3:yang:ieee802-ethernet-interface"><auto-negotiation><enable>true</enable></auto-negotiation></ethernet></interface><interface><name>sw0p4</name><type xmlns:ianaift="urn:ietf:params:xml:ns:yang:iana-if-type">ianaift:ethernetCsmacd</type><enabled>true</enabled><max-sdu-table xmlns="urn:ieee:std:802.1Q:yang:ieee802-dot1q-sched"><traffic-class>0</traffic-class><queue-max-sdu>1504</queue-max-sdu></max-sdu-table><max-sdu-table xmlns="urn:ieee:std:802.1Q:yang:ieee802-dot1q-sched"><traffic-class>1</traffic-class><queue-max-sdu>1504</queue-max-sdu></max-sdu-table><max-sdu-table xmlns="urn:ieee:std:802.1Q:yang:ieee802-dot1q-sched"><traffic-class>2</traffic-class><queue-max-sdu>1504</queue-max-sdu></max-sdu-table><max-sdu-table xmlns="urn:ieee:std:802.1Q:yang:ieee802-dot1q-sched"><traffic-class>3</traffic-class><queue-max-sdu>1504</queue-max-sdu></max-sdu-table><max-sdu-table xmlns="urn:ieee:std:802.1Q:yang:ieee802-dot1q-sched"><traffic-class>4</traffic-class><queue-max-sdu>1504</queue-max-sdu></max-sdu-table><max-sdu-table xmlns="urn:ieee:std:802.1Q:yang:ieee802-dot1q-sched"><traffic-class>5</traffic-class><queue-max-sdu>1504</queue-max-sdu></max-sdu-table><max-sdu-table xmlns="urn:ieee:std:802.1Q:yang:ieee802-dot1q-sched"><traffic-class>6</traffic-class><queue-max-sdu>1504</queue-max-sdu></max-sdu-table><max-sdu-table xmlns="urn:ieee:std:802.1Q:yang:ieee802-dot1q-sched"><traffic-class>7</traffic-class><queue-max-sdu>1504</queue-max-sdu></max-sdu-table><gate-parameters xmlns="urn:ieee:std:802.1Q:yang:ieee802-dot1q-sched"><gate-enabled>false</gate-enabled><admin-gate-states>255</admin-gate-states><admin-control-list-length>0</admin-control-list-length><admin-cycle-time><numerator>0</numerator><denominator>1</denominator></admin-cycle-time><admin-cycle-time-extension>0</admin-cycle-time-extension><admin-base-time><seconds>0</seconds><fractional-seconds>0</fractional-seconds></admin-base-time><config-change>false</config-change></gate-parameters><mac-merge xmlns="urn:ieee:std:802.1Q:yang:ieee802-dot1q-preempt"><admin-control><merge-enable-tx>Disabled</merge-enable-tx><verify-disable-tx>Disabled</verify-disable-tx><verify-time>10</verify-time><frag-size>0</frag-size></admin-control></mac-merge><frame-preemption-parameters xmlns="urn:ieee:std:802.1Q:yang:ieee802-dot1q-preemption"><frame-preemption-status-table><traffic-class>0</traffic-class><frame-preemption-status>express</frame-preemption-status></frame-preemption-status-table><frame-preemption-status-table><traffic-class>1</traffic-class><frame-preemption-status>express</frame-preemption-status></frame-preemption-status-table><frame-preemption-status-table><traffic-class>2</traffic-class><frame-preemption-status>express</frame-preemption-status></frame-preemption-status-table><frame-preemption-status-table><traffic-class>3</traffic-class><frame-preemption-status>express</frame-preemption-status></frame-preemption-status-table><frame-preemption-status-table><traffic-class>4</traffic-class><frame-preemption-status>express</frame-preemption-status></frame-preemption-status-table><frame-preemption-status-table><traffic-class>5</traffic-class><frame-preemption-status>express</frame-preemption-status></frame-preemption-status-table><frame-preemption-status-table><traffic-class>6</traffic-class><frame-preemption-status>express</frame-preemption-status></frame-preemption-status-table><frame-preemption-status-table><traffic-class>7</traffic-class><frame-preemption-status>express</frame-preemption-status></frame-preemption-status-table></frame-preemption-parameters><bridge-port xmlns="urn:ieee:std:802.1Q:yang:ieee802-dot1q-bridge"><component-name>br0</component-name><port-type>c-vlan-bridge-port</port-type><pvid>1</pvid><default-priority>0</default-priority><priority-regeneration><priority0>0</priority0><priority1>1</priority1><priority2>2</priority2><priority3>3</priority3><priority4>4</priority4><priority5>5</priority5><priority6>6</priority6><priority7>7</priority7></priority-regeneration><traffic-class><priority0>0</priority0><priority1>1</priority1><priority2>2</priority2><priority3>3</priority3><priority4>4</priority4><priority5>5</priority5><priority6>6</priority6><priority7>7</priority7></traffic-class><acceptable-frame>admit-all-frames</acceptable-frame><enable-ingress-filtering>true</enable-ingress-filtering></bridge-port><ethernet xmlns="urn:ieee:std:802.3:yang:ieee802-ethernet-interface"><auto-negotiation><enable>true</enable></auto-negotiation></ethernet></interface><interface><name>sw0p5</name><type xmlns:ianaift="urn:ietf:params:xml:ns:yang:iana-if-type">ianaift:ethernetCsmacd</type><enabled>true</enabled><max-sdu-table xmlns="urn:ieee:std:802.1Q:yang:ieee802-dot1q-sched"><traffic-class>0</traffic-class><queue-max-sdu>1504</queue-max-sdu></max-sdu-table><max-sdu-table xmlns="urn:ieee:std:802.1Q:yang:ieee802-dot1q-sched"><traffic-class>1</traffic-class><queue-max-sdu>1504</queue-max-sdu></max-sdu-table><max-sdu-table xmlns="urn:ieee:std:802.1Q:yang:ieee802-dot1q-sched"><traffic-class>2</traffic-class><queue-max-sdu>1504</queue-max-sdu></max-sdu-table><max-sdu-table xmlns="urn:ieee:std:802.1Q:yang:ieee802-dot1q-sched"><traffic-class>3</traffic-class><queue-max-sdu>1504</queue-max-sdu></max-sdu-table><max-sdu-table xmlns="urn:ieee:std:802.1Q:yang:ieee802-dot1q-sched"><traffic-class>4</traffic-class><queue-max-sdu>1504</queue-max-sdu></max-sdu-table><max-sdu-table xmlns="urn:ieee:std:802.1Q:yang:ieee802-dot1q-sched"><traffic-class>5</traffic-class><queue-max-sdu>1504</queue-max-sdu></max-sdu-table><max-sdu-table xmlns="urn:ieee:std:802.1Q:yang:ieee802-dot1q-sched"><traffic-class>6</traffic-class><queue-max-sdu>1504</queue-max-sdu></max-sdu-table><max-sdu-table xmlns="urn:ieee:std:802.1Q:yang:ieee802-dot1q-sched"><traffic-class>7</traffic-class><queue-max-sdu>1504</queue-max-sdu></max-sdu-table><gate-parameters xmlns="urn:ieee:std:802.1Q:yang:ieee802-dot1q-sched"><gate-enabled>false</gate-enabled><admin-gate-states>255</admin-gate-states><admin-control-list-length>0</admin-control-list-length><admin-cycle-time><numerator>0</numerator><denominator>1</denominator></admin-cycle-time><admin-cycle-time-extension>0</admin-cycle-time-extension><admin-base-time><seconds>0</seconds><fractional-seconds>0</fractional-seconds></admin-base-time><config-change>false</config-change></gate-parameters><mac-merge xmlns="urn:ieee:std:802.1Q:yang:ieee802-dot1q-preempt"><admin-control><merge-enable-tx>Disabled</merge-enable-tx><verify-disable-tx>Disabled</verify-disable-tx><verify-time>10</verify-time><frag-size>0</frag-size></admin-control></mac-merge><frame-preemption-parameters xmlns="urn:ieee:std:802.1Q:yang:ieee802-dot1q-preemption"><frame-preemption-status-table><traffic-class>0</traffic-class><frame-preemption-status>express</frame-preemption-status></frame-preemption-status-table><frame-preemption-status-table><traffic-class>1</traffic-class><frame-preemption-status>express</frame-preemption-status></frame-preemption-status-table><frame-preemption-status-table><traffic-class>2</traffic-class><frame-preemption-status>express</frame-preemption-status></frame-preemption-status-table><frame-preemption-status-table><traffic-class>3</traffic-class><frame-preemption-status>express</frame-preemption-status></frame-preemption-status-table><frame-preemption-status-table><traffic-class>4</traffic-class><frame-preemption-status>express</frame-preemption-status></frame-preemption-status-table><frame-preemption-status-table><traffic-class>5</traffic-class><frame-preemption-status>express</frame-preemption-status></frame-preemption-status-table><frame-preemption-status-table><traffic-class>6</traffic-class><frame-preemption-status>express</frame-preemption-status></frame-preemption-status-table><frame-preemption-status-table><traffic-class>7</traffic-class><frame-preemption-status>express</frame-preemption-status></frame-preemption-status-table></frame-preemption-parameters><bridge-port xmlns="urn:ieee:std:802.1Q:yang:ieee802-dot1q-bridge"><component-name>br0</component-name><port-type>c-vlan-bridge-port</port-type><pvid>1</pvid><default-priority>0</default-priority><priority-regeneration><priority0>0</priority0><priority1>1</priority1><priority2>2</priority2><priority3>3</priority3><priority4>4</priority4><priority5>5</priority5><priority6>6</priority6><priority7>7</priority7></priority-regeneration><traffic-class><priority0>0</priority0><priority1>1</priority1><priority2>2</priority2><priority3>3</priority3><priority4>4</priority4><priority5>5</priority5><priority6>6</priority6><priority7>7</priority7></traffic-class><acceptable-frame>admit-all-frames</acceptable-frame><enable-ingress-filtering>true</enable-ingress-filtering></bridge-port><ethernet xmlns="urn:ieee:std:802.3:yang:ieee802-ethernet-interface"><auto-negotiation><enable>true</enable></auto-negotiation></ethernet></interface><interface><name>sw0ep</name><type xmlns:ianaift="urn:ietf:params:xml:ns:yang:iana-if-type">ianaift:ethernetCsmacd</type><enabled>true</enabled><ethernet xmlns="urn:ieee:std:802.3:yang:ieee802-ethernet-interface"><auto-negotiation><enable>false</enable></auto-negotiation></ethernet></interface><interface><name>br0</name><type xmlns:ianaift="urn:ietf:params:xml:ns:yang:iana-if-type">ianaift:ethernetCsmacd</type><enabled>true</enabled></interface></interfaces><bridges xmlns="urn:ieee:std:802.1Q:yang:ieee802-dot1q-bridge"><bridge><name>br0</name><address>00-80-82-87-d3-0d</address><bridge-type>customer-vlan-bridge</bridge-type><component><name>br0</name><id>1</id><type>c-vlan-component</type><address>00-80-82-87-d3-0d</address><traffic-class-enabled>true</traffic-class-enabled><filtering-database><vlan-registration-entry><database-id>1</database-id><vids>1</vids><entry-type>static</entry-type><port-map><port-ref>1</port-ref><static-vlan-registration-entries><registrar-admin-control>normal</registrar-admin-control><vlan-transmitted>untagged</vlan-transmitted></static-vlan-registration-entries></port-map><port-map><port-ref>2</port-ref><static-vlan-registration-entries><registrar-admin-control>normal</registrar-admin-control><vlan-transmitted>untagged</vlan-transmitted></static-vlan-registration-entries></port-map><port-map><port-ref>3</port-ref><static-vlan-registration-entries><registrar-admin-control>normal</registrar-admin-control><vlan-transmitted>untagged</vlan-transmitted></static-vlan-registration-entries></port-map><port-map><port-ref>4</port-ref><static-vlan-registration-entries><registrar-admin-control>normal</registrar-admin-control><vlan-transmitted>untagged</vlan-transmitted></static-vlan-registration-entries></port-map><port-map><port-ref>5</port-ref><static-vlan-registration-entries><registrar-admin-control>normal</registrar-admin-control><vlan-transmitted>untagged</vlan-transmitted></static-vlan-registration-entries></port-map></vlan-registration-entry></filtering-database><bridge-mst><mstid>4094</mstid></bridge-mst></component></bridge></bridges><lldp xmlns="urn:ieee:std:802.1AB:yang:ieee802-dot1ab-lldp"><message-fast-tx>1</message-fast-tx><message-tx-hold-multiplier>4</message-tx-hold-multiplier><message-tx-interval>30</message-tx-interval><reinit-delay>2</reinit-delay><tx-credit-max>5</tx-credit-max><tx-fast-init>4</tx-fast-init><notification-interval>30</notification-interval><port><name>sw0p2</name><dest-mac-address>00-80-82-87-d3-0e</dest-mac-address><management-address-tx-port><address-subtype xmlns:rt="urn:ietf:params:xml:ns:yang:ietf-routing">rt:ipv6</address-subtype><man-address>fe80::280:82ff:fe87:d30d</man-address></management-address-tx-port></port><port><name>sw0p3</name><dest-mac-address>00-80-82-87-d3-0f</dest-mac-address><management-address-tx-port><address-subtype xmlns:rt="urn:ietf:params:xml:ns:yang:ietf-routing">rt:ipv6</address-subtype><man-address>fe80::280:82ff:fe87:d30d</man-address></management-address-tx-port></port><port><name>sw0p4</name><dest-mac-address>00-80-82-87-d3-10</dest-mac-address><management-address-tx-port><address-subtype xmlns:rt="urn:ietf:params:xml:ns:yang:ietf-routing">rt:ipv6</address-subtype><man-address>fe80::280:82ff:fe87:d30d</man-address></management-address-tx-port></port><port><name>sw0p5</name><dest-mac-address>00-80-82-87-d3-11</dest-mac-address><management-address-tx-port><address-subtype xmlns:rt="urn:ietf:params:xml:ns:yang:ietf-routing">rt:ipv6</address-subtype><man-address>fe80::280:82ff:fe87:d30d</man-address></management-address-tx-port></port></lldp><ieee8021-mstp xmlns="urn:ietf:params:xml:ns:yang:smiv2:ieee8021-mstp"><ieee8021MstpCistTable><ieee8021MstpCistEntry><ieee8021MstpCistComponentId>1</ieee8021MstpCistComponentId><ieee8021MstpCistMaxHops>20</ieee8021MstpCistMaxHops></ieee8021MstpCistEntry></ieee8021MstpCistTable><ieee8021MstpTable><ieee8021MstpEntry><ieee8021MstpComponentId>1</ieee8021MstpComponentId><ieee8021MstpId>4094</ieee8021MstpId><ieee8021MstpBridgePriority>8</ieee8021MstpBridgePriority></ieee8021MstpEntry></ieee8021MstpTable><ieee8021MstpCistPortTable><ieee8021MstpCistPortEntry><ieee8021MstpCistPortComponentId>1</ieee8021MstpCistPortComponentId><ieee8021MstpCistPortNum>1</ieee8021MstpCistPortNum><ieee8021MstpCistPortAdminPathCost>0</ieee8021MstpCistPortAdminPathCost><ieee8021MstpCistPortAdminEdgePort>false</ieee8021MstpCistPortAdminEdgePort><ieee8021MstpCistPortMacEnabled>true</ieee8021MstpCistPortMacEnabled><ieee8021MstpCistPortRestrictedRole>false</ieee8021MstpCistPortRestrictedRole><ieee8021MstpCistPortRestrictedTcn>false</ieee8021MstpCistPortRestrictedTcn></ieee8021MstpCistPortEntry><ieee8021MstpCistPortEntry><ieee8021MstpCistPortComponentId>1</ieee8021MstpCistPortComponentId><ieee8021MstpCistPortNum>2</ieee8021MstpCistPortNum><ieee8021MstpCistPortAdminPathCost>0</ieee8021MstpCistPortAdminPathCost><ieee8021MstpCistPortAdminEdgePort>false</ieee8021MstpCistPortAdminEdgePort><ieee8021MstpCistPortMacEnabled>true</ieee8021MstpCistPortMacEnabled><ieee8021MstpCistPortRestrictedRole>false</ieee8021MstpCistPortRestrictedRole><ieee8021MstpCistPortRestrictedTcn>false</ieee8021MstpCistPortRestrictedTcn></ieee8021MstpCistPortEntry><ieee8021MstpCistPortEntry><ieee8021MstpCistPortComponentId>1</ieee8021MstpCistPortComponentId><ieee8021MstpCistPortNum>3</ieee8021MstpCistPortNum><ieee8021MstpCistPortAdminPathCost>0</ieee8021MstpCistPortAdminPathCost><ieee8021MstpCistPortAdminEdgePort>false</ieee8021MstpCistPortAdminEdgePort><ieee8021MstpCistPortMacEnabled>false</ieee8021MstpCistPortMacEnabled><ieee8021MstpCistPortRestrictedRole>false</ieee8021MstpCistPortRestrictedRole><ieee8021MstpCistPortRestrictedTcn>false</ieee8021MstpCistPortRestrictedTcn></ieee8021MstpCistPortEntry><ieee8021MstpCistPortEntry><ieee8021MstpCistPortComponentId>1</ieee8021MstpCistPortComponentId><ieee8021MstpCistPortNum>4</ieee8021MstpCistPortNum><ieee8021MstpCistPortAdminPathCost>0</ieee8021MstpCistPortAdminPathCost><ieee8021MstpCistPortAdminEdgePort>false</ieee8021MstpCistPortAdminEdgePort><ieee8021MstpCistPortMacEnabled>true</ieee8021MstpCistPortMacEnabled><ieee8021MstpCistPortRestrictedRole>false</ieee8021MstpCistPortRestrictedRole><ieee8021MstpCistPortRestrictedTcn>false</ieee8021MstpCistPortRestrictedTcn></ieee8021MstpCistPortEntry><ieee8021MstpCistPortEntry><ieee8021MstpCistPortComponentId>1</ieee8021MstpCistPortComponentId><ieee8021MstpCistPortNum>5</ieee8021MstpCistPortNum><ieee8021MstpCistPortAdminPathCost>0</ieee8021MstpCistPortAdminPathCost><ieee8021MstpCistPortAdminEdgePort>false</ieee8021MstpCistPortAdminEdgePort><ieee8021MstpCistPortMacEnabled>true</ieee8021MstpCistPortMacEnabled><ieee8021MstpCistPortRestrictedRole>false</ieee8021MstpCistPortRestrictedRole><ieee8021MstpCistPortRestrictedTcn>false</ieee8021MstpCistPortRestrictedTcn></ieee8021MstpCistPortEntry></ieee8021MstpCistPortTable><ieee8021MstpPortTable><ieee8021MstpPortEntry><ieee8021MstpPortComponentId>1</ieee8021MstpPortComponentId><ieee8021MstpPortMstId>4094</ieee8021MstpPortMstId><ieee8021MstpPortNum>1</ieee8021MstpPortNum><ieee8021MstpPortPriority>8</ieee8021MstpPortPriority><ieee8021MstpPortPathCost>20000</ieee8021MstpPortPathCost></ieee8021MstpPortEntry><ieee8021MstpPortEntry><ieee8021MstpPortComponentId>1</ieee8021MstpPortComponentId><ieee8021MstpPortMstId>4094</ieee8021MstpPortMstId><ieee8021MstpPortNum>2</ieee8021MstpPortNum><ieee8021MstpPortPriority>8</ieee8021MstpPortPriority><ieee8021MstpPortPathCost>20000</ieee8021MstpPortPathCost></ieee8021MstpPortEntry><ieee8021MstpPortEntry><ieee8021MstpPortComponentId>1</ieee8021MstpPortComponentId><ieee8021MstpPortMstId>4094</ieee8021MstpPortMstId><ieee8021MstpPortNum>3</ieee8021MstpPortNum><ieee8021MstpPortPriority>8</ieee8021MstpPortPriority><ieee8021MstpPortPathCost>200000000</ieee8021MstpPortPathCost></ieee8021MstpPortEntry><ieee8021MstpPortEntry><ieee8021MstpPortComponentId>1</ieee8021MstpPortComponentId><ieee8021MstpPortMstId>4094</ieee8021MstpPortMstId><ieee8021MstpPortNum>4</ieee8021MstpPortNum><ieee8021MstpPortPriority>8</ieee8021MstpPortPriority><ieee8021MstpPortPathCost>20000</ieee8021MstpPortPathCost></ieee8021MstpPortEntry><ieee8021MstpPortEntry><ieee8021MstpPortComponentId>1</ieee8021MstpPortComponentId><ieee8021MstpPortMstId>4094</ieee8021MstpPortMstId><ieee8021MstpPortNum>5</ieee8021MstpPortNum><ieee8021MstpPortPriority>8</ieee8021MstpPortPriority><ieee8021MstpPortPathCost>20000</ieee8021MstpPortPathCost></ieee8021MstpPortEntry></ieee8021MstpPortTable><ieee8021MstpConfigIdTable><ieee8021MstpConfigIdEntry><ieee8021MstpConfigIdComponentId>1</ieee8021MstpConfigIdComponentId><ieee8021MstpConfigIdFormatSelector>0</ieee8021MstpConfigIdFormatSelector><ieee8021MstpConfigurationName>00808287D30D</ieee8021MstpConfigurationName><ieee8021MstpRevisionLevel>0</ieee8021MstpRevisionLevel><ieee8021MstpConfigurationDigest>QUMzNjE3N0Y1MDI4M0NENA==</ieee8021MstpConfigurationDigest></ieee8021MstpConfigIdEntry></ieee8021MstpConfigIdTable></ieee8021-mstp><ptp xmlns="urn:ietf:params:xml:ns:yang:ietf-ptp"><instance-list><instance-number>1</instance-number><default-ds><clock-quality><clock-accuracy>35</clock-accuracy></clock-quality><priority1>247</priority1><priority2>248</priority2><domain-number>0</domain-number></default-ds><parent-ds><grandmaster-clock-quality><clock-accuracy>35</clock-accuracy></grandmaster-clock-quality><grandmaster-priority1>247</grandmaster-priority1><grandmaster-priority2>248</grandmaster-priority2></parent-ds><time-properties-ds><current-utc-offset-valid>false</current-utc-offset-valid><leap59>false</leap59><leap61>false</leap61></time-properties-ds></instance-list></ptp></data>`

func main() {

	log.Infof("Parsing the full config...")

	// response := pb.GetResponse{}

	// notification := []*pb.Notification{
	// 	&pb.Notification{},
	// }

	// netconfMap := netconfXMLtoMap(xmlString)

	// requestedValue, err := getRequestedNode(netconfMap, path)
	// if err != nil {
	// 	fmt.Println("Failed to get requested node!")
	// }

	// fmt.Println(buildGnmiNotification(netconfMap))

	// xmlString

	netconfConv(xmlString)

	// END OF TEMPORARY CHANGES

	model := gnmi.NewModel(modeldata.ModelData,
		reflect.TypeOf((*gostruct.Device)(nil)),
		gostruct.SchemaTree["Device"],
		gostruct.Unmarshal,
		gostruct.ΛEnum)

	flag.Usage = func() {
		fmt.Fprintf(os.Stderr, "Supported models:\n")
		for _, m := range model.SupportedModels() {
			fmt.Fprintf(os.Stderr, "  %s\n", m)
		}
		fmt.Fprintf(os.Stderr, "\n")
		fmt.Fprintf(os.Stderr, "Usage of %s:\n", os.Args[0])
		flag.PrintDefaults()
	}

	flag.Parse()

	opts := credentials.ServerCredentials()
	g := grpc.NewServer(opts...)

	var configData []byte
	if *configFile != "" {
		var err error
		configData, err = ioutil.ReadFile(*configFile)
		if err != nil {
			log.Fatalf("Error in reading config file: %v", err)
		}
	}

	s, err := newServer(model, configData)

	if err != nil {
		log.Fatalf("Error in creating gnmi target: %v", err)
	}
	pb.RegisterGNMIServer(g, s)
	reflection.Register(g)

	log.Infof("Starting gNMI agent to listen on %s", *bindAddr)
	listen, err := net.Listen("tcp", *bindAddr)
	if err != nil {
		log.Fatalf("Failed to listen: %v", err)
	}

	go func() {

		for {
			s.SetDateTime()
			time.Sleep(time.Second * 1)
		}

	}()

	log.Infof("Starting gNMI agent to serve on %s", *bindAddr)
	if err := g.Serve(listen); err != nil {
		log.Fatalf("Failed to serve: %v", err)
	}
}

func netconfConv(xmlString string) *Schema {
	decoder := xml.NewDecoder(strings.NewReader(xmlString))

	schema := &Schema{}

	// initialToken, _ := decoder.Token()
	// switch tokenType := initialToken.(type) {
	// case xml.StartElement:
	// 	schema.Entry = &yang.Entry{
	// 		Name:        tokenType.Name.Local,
	// 		Description: tokenType.Name.Space,
	// 	}

	// 	// var newEntry *yang.Entry
	// 	// if schema.Entry != nil {
	// 	// 	newEntry = schema.Entry.Parent.Dir[tokenType.Name.Local]
	// 	// }
	// 	// schema = &Schema{Entry: newEntry, Children: make(map[string]interface{}), Parent: schema}

	// 	// fmt.Println(schema)
	// default:
	// 	fmt.Println("Failed to find root of schema!")
	// }

	for i := 0; i < 3; i++ {
		tok, _ := decoder.Token()

		if tok == nil {
			return schema
		}

		// DOES NOT WORK... (It does not generate the correct structure or something, no entries printed)

		switch tokType := tok.(type) {
		case xml.StartElement:
			// fmt.Println(schema.Entry)
			var newEntry *yang.Entry
			if schema.Entry != nil {
				newEntry = schema.Entry.Parent.Dir[tokType.Name.Local]
				newEntry.Description = tokType.Name.Space
			}
			schema = &Schema{Entry: newEntry, Children: make(map[string]interface{}), Parent: schema}

			if newEntry == nil {
				break
			}

			if newEntry.IsList() || newEntry.IsLeafList() {
				if _, ok := schema.Parent.Children[newEntry.Name]; !ok {
					schema.Parent.Children[newEntry.Name] = []interface{}{}
				}
				if newEntry.IsList() {
					schema.Parent.Children[newEntry.Name] = append(schema.Parent.Children[newEntry.Name].([]interface{}), schema.Children)
				}
			} else if newEntry.IsContainer() {
				schema.Parent.Children[newEntry.Name] = schema.Children
			}

			// fmt.Println(", is of type StartElement")

		case xml.EndElement:
			schema = schema.Parent

			// fmt.Println(", is of type EndElement")

		case xml.CharData:
			if schema.Entry != nil && (schema.Entry.IsLeaf() || schema.Entry.IsLeafList()) {
				value := getLeafValue(tokType, schema.Entry)
				tag := schema.Entry.Name
				if schema.Entry.IsLeaf() {
					schema.Parent.Children[tag] = value
				} else {
					schema.Parent.Children[tag] = append(schema.Parent.Children[tag].([]interface{}), value)
				}
			}

			// fmt.Println(", is of type CharData")

		default:
			fmt.Print(", was not recognized with type: ")
			fmt.Println(tokType)
		}

		fmt.Println(schema.Entry)

		fmt.Println("-----------------")
	}

	return schema
}

type Schema struct {
	Entry    *yang.Entry
	Children map[string]interface{}
	Parent   *Schema
}

// getRequestedNode delivers the node requested by the specified gNMI path from the
// input (a map delivered by the netconfXMLtoMap method)
// func getRequestedNode(input interface{}, path *pb.Path) (interface{}, error) {

// 	for _, elem := range path.Elem {
// 		var nextmap map[string]interface{}
// 		switch v := input.(type) {
// 		case map[string]interface{}:
// 			nextmap = v
// 		case []interface{}:
// 			nextmap = v[0].(map[string]interface{})
// 		}
// 		input = nextmap[elem.Name]
// 		if input == nil {
// 			return nil, status.Errorf(codes.NotFound, "failed to find path: %v", path)
// 		}
// 	}
// 	if v, ok := input.([]interface{}); ok {
// 		input = v[0].(map[string]interface{})
// 	}
// 	return input, nil
// }

// eldesc is used to track the state of XML element decoding.
// The in-scope elements are held in a stack, with each element pointing to its parent.
type elementDesc struct {
	// schema entry corresponding to this element, (nil -> schema does not include it)
	schema *yang.Entry
	// map of child values for the container, keyed by child leaf/container name.
	// If the child is a simple container, the value will be another map[string] interface{}
	// If the child is a simple list, the value will be its scalar value.
	// If the child is a list, the value will be an array of map[string] interface{}
	children map[string]interface{}
	// reference to the descriptor for this element's parent
	parent *elementDesc
}

func netconfXMLtoMap(xmlString string) map[string]interface{} {
	decoder := xml.NewDecoder(strings.NewReader(xmlString))

	childrenMap := make(map[string]interface{})
	// elemDesc := &elementDesc{children: childrenMap}

	for i := 0; i < 50; i++ {
		tok, _ := decoder.Token()

		if tok == nil {
			return childrenMap
		}

		fmt.Print(tok)

		switch tokType := tok.(type) {
		case xml.StartElement:
			fmt.Println(", is of type StartElement")

			// var newSchema *yang.Entry
			// if elemDesc.schema != nil {
			// 	newSchema = elemDesc.schema.Dir[tokType.Name.Local]
			// }
			// elemDesc = &elementDesc{schema: newSchema, children: make(map[string]interface{}), parent: elemDesc}

			// if newSchema == nil {
			// 	break
			// }

			// linkNodeToParent(newSchema, elemDesc)

		case xml.EndElement:
			fmt.Println(", is of type EndElement")

			// elemDesc = elemDesc.parent

		case xml.CharData:
			fmt.Println(", is of type CharData")

			// if elemDesc.schema == nil {
			// 	// fmt.Print(elemDesc.schema.Name)
			// 	fmt.Println("Empty schema!")
			// 	break
			// }

			// if elemDesc != nil && (elemDesc.schema.IsLeaf() || elemDesc.schema.IsLeafList()) {
			// 	addLeafValueToParent(tokType, elemDesc)
			// }

		default:
			fmt.Print(", was not recognized with type: ")
			fmt.Println(tokType)
		}

		fmt.Println("-----------------")

		// jsonDump, err := json.Marshal(requestedValue)
		// if err != nil {
		// 	return nil, status.Error(codes.Internal, fmt.Sprintf("error in marshaling %s JSON tree to bytes: %v", "Internal", err))
		// }
		// return notification(prefix, &gnmi.Update{Path: path, Val: &gnmi.TypedValue{Value: &gnmi.TypedValue_JsonVal{JsonVal: jsonDump}}}), nil
	}

	return nil
}

// linkNodeToParent links a container/leaf to its parent node.
func linkNodeToParent(nschema *yang.Entry, cureld *elementDesc) {
	tag := nschema.Name
	if nschema.IsList() || nschema.IsLeafList() {
		if _, ok := cureld.parent.children[tag]; !ok {
			// Create an array to hold the values for this list/leaf-list.
			cureld.parent.children[tag] = []interface{}{}
		}
		if nschema.IsList() {
			// Append this container's value map to the parent's list for this tag.
			cureld.parent.children[tag] = append(cureld.parent.children[tag].([]interface{}), cureld.children)
		}
	} else if nschema.IsContainer() {
		// Store this container's value map in the parent's map, keyed by this container's tag.
		cureld.parent.children[tag] = cureld.children
	}
}

// addLeafValueToParent adds a leaf value to the parent container's map.
func addLeafValueToParent(input xml.CharData, cureld *elementDesc) {
	value := getLeafValue(input, cureld.schema)
	tag := cureld.schema.Name
	if cureld.schema.IsLeaf() {
		cureld.parent.children[tag] = value
	} else {
		cureld.parent.children[tag] = append(cureld.parent.children[tag].([]interface{}), value)
	}
}

// Delivers the value of leaf, using the type defined by the associated schema entry.
func getLeafValue(v xml.CharData, schema *yang.Entry) interface{} {

	switch schema.Type.Kind {
	case yang.Ystring:
		return strings.TrimSpace(string(v))
	case yang.Yunion:
		val, _ := getUnionValue(strings.TrimSpace(string(v)), schema.Type.Type)
		return val
	case yang.Yuint32:
		val, _ := strconv.ParseUint(strings.TrimSpace(string(v)), 10, 64)
		return val
	case yang.Yenum:
		return strings.TrimSpace(string(v))
	}
	// TODO Handle other kinds
	log.Errorf("Leaf kind %s still to be supported", schema.Type.Kind)
	return strings.TrimSpace(string(v))
}

func getUnionValue(v string, types []*yang.YangType) (interface{}, error) {
	for _, t := range types {
		switch t.Kind {
		case yang.Ystring:
			if isValidString(v, t) {
				return v, nil
			}
		case yang.Yint32:
			val := isValidInt(v, t)
			if val != nil {
				return val, nil
			}
		}
		// TODO Add other kinds.
	}
	return nil, status.Errorf(codes.NotFound, "failed to set union value: %s", v)
}

func isValidString(v string, t *yang.YangType) bool {
	return anyPatternMatches(v, t.Pattern)
	// TODO Range checks?
}

func isValidInt(v string, t *yang.YangType) interface{} {
	val, err := strconv.ParseInt(v, 10, 32)
	if err != nil {
		return nil
	}

	for _, r := range t.Range {
		if val >= int64(r.Min.Value) && val <= int64(r.Max.Value) {
			return val
		}
	}

	return nil
}

func anyPatternMatches(v string, patterns []string) bool {
	for _, p := range patterns {
		if !patternMatches(v, p) {
			return false
		}
	}
	return true
}

func patternMatches(v string, p string) bool {
	// fixYangRegexp adds ^(...)$ around the pattern - the result is
	// equivalent to a full match of whole string.
	r, err := regexp.Compile(fixYangRegexp(p))
	return err != nil && r.MatchString(v)
}

// fixYangRegexp takes a pattern regular expression from a YANG module and
// returns it into a format which can be used by the Go regular expression
// library. YANG uses a W3C standard that is defined to be implicitly anchored
// at the head or tail of the expression. See
// https://www.w3.org/TR/2004/REC-xmlschema-2-20041028/#regexs for details.
func fixYangRegexp(pattern string) string {
	var buf bytes.Buffer
	var inEscape bool
	var prevChar rune
	addParens := false

	for i, ch := range pattern {
		if i == 0 && ch != '^' {
			buf.WriteRune('^')
			// Add parens around entire expression to prevent logical
			// subexpressions associating with leading/trailing ^ / $.
			buf.WriteRune('(')
			addParens = true
		}

		switch ch {
		case '$':
			// Dollar signs need to be escaped unless they are at
			// the end of the pattern, or are already escaped.
			if !inEscape && i != len(pattern)-1 {
				buf.WriteRune('\\')
			}
		case '^':
			// Carets need to be escaped unless they are already
			// escaped, indicating set negation ([^.*]) or at the
			// start of the string.
			if !inEscape && prevChar != '[' && i != 0 {
				buf.WriteRune('\\')
			}
		}

		// If the previous character was an escape character, then we
		// leave the escape, otherwise check whether this is an escape
		// char and if so, then enter escape.
		inEscape = !inEscape && ch == '\\'

		buf.WriteRune(ch)

		if i == len(pattern)-1 {
			if addParens {
				buf.WriteRune(')')
			}
			if ch != '$' {
				buf.WriteRune('$')
			}
		}

		prevChar = ch
	}

	return buf.String()
}

// buildGnmiNotification maps the netconf returned value to a gNMI notification
// func buildGnmiNotification(entry *yang.Entry, requestedValue interface{}, path *pb.Path, prefix *pb.Path) (*pb.Notification, error) {
func buildGnmiNotification(requestedValue interface{}) (*pb.Notification, error) {
	// if entry.IsLeaf() {
	// 	val, err := value.FromScalar(reflect.ValueOf(&requestedValue).Elem().Interface())
	// 	if err != nil {
	// 		return nil, status.Error(codes.Internal, fmt.Sprintf("leaf node does not contain a scalar type value: %v", err))
	// 	}
	// 	return notification(&pb.Update{Val: val}), nil
	// }
	// if entry.IsDir() {
	// 	jsonDump, err := json.Marshal(requestedValue)
	// 	if err != nil {
	// 		return nil, status.Error(codes.Internal, fmt.Sprintf("error in marshaling %s JSON tree to bytes: %v", "Internal", err))
	// 	}
	// 	return notification(&pb.Update{Val: &pb.TypedValue{Value: &pb.TypedValue_JsonVal{JsonVal: jsonDump}}}), nil
	// }
	// panic(fmt.Sprintf("unexpected schema entry type %s", entry.Name))
	jsonDump, err := json.Marshal(requestedValue)
	if err != nil {
		return nil, status.Error(codes.Internal, fmt.Sprintf("error in marshaling %s JSON tree to bytes: %v", "Internal", err))
	}

	return notification((&pb.Update{Val: &pb.TypedValue{Value: &pb.TypedValue_JsonVal{JsonVal: jsonDump}}})), nil
}

// notification returns a new Notification with the specified prefix, update and the current time.
func notification(update *pb.Update) *pb.Notification {
	return &pb.Notification{
		Timestamp: time.Now().UnixNano(),
		Update:    []*pb.Update{update},
	}
}
